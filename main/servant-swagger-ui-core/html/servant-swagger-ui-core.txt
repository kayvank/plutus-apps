-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Servant swagger ui core components
--   
--   Provide embedded swagger UI for servant and swagger (i.e.
--   servant-swagger)
--   
--   See servant-swagger-ui, servant-swagger-ui-jensoleg or
--   servant-swagger-ui-redoc for "concrete" implementations.
@package servant-swagger-ui-core
@version 0.3.5

module Servant.Swagger.UI.Core

-- | Swagger schema + ui api.
--   
--   <tt>SwaggerSchemaUI "swagger-ui" "swagger.json"</tt> will result into
--   following hierarchy:
--   
--   <pre>
--   /swagger.json
--   /swagger-ui
--   /swagger-ui/index.html
--   /swagger-ui/...
--   </pre>
--   
--   This type does not actually force served type to be <tt>Swagger</tt>
--   from <tt>swagger2</tt> package, it could be arbitrary <tt>aeson</tt>
--   <a>Value</a>.
type SwaggerSchemaUI (dir :: Symbol) (schema :: Symbol) = SwaggerSchemaUI' dir (schema :> Get '[JSON] Value)

-- | Use <a>SwaggerSchemaUI'</a> when you need even more control over where
--   <tt>swagger.json</tt> is served (e.g. subdirectory).
type SwaggerSchemaUI' (dir :: Symbol) (api :: *) = api :<|> dir :> (Get '[HTML] (SwaggerUiHtml dir api) :<|> "index.html" :> Get '[HTML] (SwaggerUiHtml dir api) :<|> Raw)

-- | Index file for swagger ui.
--   
--   It's configured by the location of swagger schema and directory it
--   lives under.
--   
--   Implementation detail: the <tt>index.html</tt> is prepopulated with
--   parameters to find schema file automatically.
data SwaggerUiHtml (dir :: Symbol) (api :: *)
SwaggerUiHtml :: Text -> SwaggerUiHtml (dir :: Symbol) (api :: *)
swaggerSchemaUIServerImpl :: (Monad m, ServerT api m ~ m Value, ToJSON a) => Text -> [(FilePath, ByteString)] -> a -> ServerT (SwaggerSchemaUI' dir api) m

-- | Use a custom server to serve the Swagger spec source.
swaggerSchemaUIServerImpl' :: Monad m => Text -> [(FilePath, ByteString)] -> ServerT api m -> ServerT (SwaggerSchemaUI' dir api) m
data Handler a
instance (GHC.TypeLits.KnownSymbol dir, Servant.Links.HasLink api, Servant.Links.Link GHC.Types.~ Servant.Links.MkLink api Servant.Links.Link, Servant.API.TypeLevel.IsElem api api) => Text.Blaze.ToMarkup (Servant.Swagger.UI.Core.SwaggerUiHtml dir api)
