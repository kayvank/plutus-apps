-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | API definitions for blockfrost.io
--   
--   Core types and Servant API description
@package blockfrost-api
@version 0.4.0.1


-- | Blockfrost environments
module Blockfrost.Env

-- | Blockfrost environments
--   
--   Corresponds to Network when creating a Blockfrost project. Each
--   environment has separate token.
data Env
Ipfs :: Env
Mainnet :: Env
Testnet :: Env
Localhost :: Env

-- | Try parsing <tt>Env</tt> from <tt>Text</tt>
parseEnv :: Text -> Either Text Env
instance GHC.Generics.Generic Blockfrost.Env.Env
instance GHC.Classes.Ord Blockfrost.Env.Env
instance GHC.Show.Show Blockfrost.Env.Env
instance GHC.Read.Read Blockfrost.Env.Env
instance GHC.Classes.Eq Blockfrost.Env.Env


-- | Blockfrost authentication schemes
module Blockfrost.Auth

-- | The type of Auth scheme.
data APIKeyInHeader (headerName :: Symbol)

-- | Auth scheme settings Needs IO action to verify passed in token and
--   maybe return Project
newtype APIKeyInHeaderSettings
APIKeyInHeaderSettings :: (Text -> IO (Maybe Project)) -> APIKeyInHeaderSettings
[apiKeySettingsQueryProject] :: APIKeyInHeaderSettings -> Text -> IO (Maybe Project)

-- | Blockfrost environments
--   
--   Corresponds to Network when creating a Blockfrost project. Each
--   environment has separate token.
data Env
Ipfs :: Env
Mainnet :: Env
Testnet :: Env
Localhost :: Env
data Project
Project :: Env -> Text -> Project
[projectEnv] :: Project -> Env
[projectId] :: Project -> Text
data ProjectAuth (auths :: [Type]) val

-- | Parse <tt>Project</tt> from <tt>Text</tt> or fail with error
mkProject :: Text -> Project

-- | <tt>Project</tt> constructor
mkProjectEnv :: Env -> Text -> Project
instance GHC.Generics.Generic Blockfrost.Auth.Project
instance GHC.Show.Show Blockfrost.Auth.Project
instance GHC.Classes.Eq Blockfrost.Auth.Project
instance forall k sub (tag :: [*]) (value :: k). Servant.Links.HasLink sub => Servant.Links.HasLink (Blockfrost.Auth.ProjectAuth tag value Servant.API.Sub.:> sub)
instance Data.String.IsString Blockfrost.Auth.Project


-- | Lovelaces
module Blockfrost.Types.Shared.Ada
type Lovelaces = Discrete "ADA" "lovelace"
instance (GHC.TypeLits.KnownSymbol cur, Money.Internal.GoodScale sc) => Servant.Docs.Internal.ToSample (Money.Internal.Discrete' cur sc)
instance Data.Aeson.Types.ToJSON.ToJSON (Money.Internal.Discrete' "ADA" '(1000000, 1))
instance Data.Aeson.Types.FromJSON.FromJSON (Money.Internal.Discrete' "ADA" '(1000000, 1))


-- | Address newtype
module Blockfrost.Types.Shared.Address
newtype Address
Address :: Text -> Address
mkAddress :: Text -> Address
unAddress :: Address -> Text
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Shared.Address.Address
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Shared.Address.Address
instance Web.Internal.HttpApiData.ToHttpApiData Blockfrost.Types.Shared.Address.Address
instance Web.Internal.HttpApiData.FromHttpApiData Blockfrost.Types.Shared.Address.Address
instance GHC.Generics.Generic Blockfrost.Types.Shared.Address.Address
instance GHC.Show.Show Blockfrost.Types.Shared.Address.Address
instance GHC.Classes.Ord Blockfrost.Types.Shared.Address.Address
instance GHC.Classes.Eq Blockfrost.Types.Shared.Address.Address
instance Data.String.IsString Blockfrost.Types.Shared.Address.Address
instance Servant.Docs.Internal.ToCapture (Servant.API.Capture.Capture "address" Blockfrost.Types.Shared.Address.Address)
instance Servant.Docs.Internal.ToCapture (Servant.API.Capture.Capture "stake_address" Blockfrost.Types.Shared.Address.Address)
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Shared.Address.Address


-- | Amount sum type
module Blockfrost.Types.Shared.Amount

-- | Amount, which is either `AdaAmount Lovelaces` representing amount of
--   lovelaces or `AssetAmount SomeDiscrete` for asset amounts, identified
--   by concatenation of asset policy ID and hex-encoded asset_name
data Amount
AdaAmount :: Lovelaces -> Amount
AssetAmount :: SomeDiscrete -> Amount

-- | SomeDiscrete values always use scale of 1
unitScale :: Scale
instance GHC.Generics.Generic Blockfrost.Types.Shared.Amount.Amount
instance GHC.Classes.Ord Blockfrost.Types.Shared.Amount.Amount
instance GHC.Show.Show Blockfrost.Types.Shared.Amount.Amount
instance GHC.Classes.Eq Blockfrost.Types.Shared.Amount.Amount
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Shared.Amount.Amount
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Shared.Amount.Amount
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Shared.Amount.Amount
instance Data.Aeson.Types.ToJSON.ToJSON Money.Internal.SomeDiscrete
instance Data.Aeson.Types.FromJSON.FromJSON Money.Internal.SomeDiscrete


-- | AssetIds
module Blockfrost.Types.Shared.AssetId

-- | Concatenation of asset policy ID and hex-encoded asset name
newtype AssetId
AssetId :: Text -> AssetId
mkAssetId :: Text -> AssetId
unAssetId :: AssetId -> Text
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Shared.AssetId.AssetId
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Shared.AssetId.AssetId
instance Web.Internal.HttpApiData.ToHttpApiData Blockfrost.Types.Shared.AssetId.AssetId
instance Web.Internal.HttpApiData.FromHttpApiData Blockfrost.Types.Shared.AssetId.AssetId
instance GHC.Generics.Generic Blockfrost.Types.Shared.AssetId.AssetId
instance GHC.Show.Show Blockfrost.Types.Shared.AssetId.AssetId
instance GHC.Classes.Ord Blockfrost.Types.Shared.AssetId.AssetId
instance GHC.Classes.Eq Blockfrost.Types.Shared.AssetId.AssetId
instance Data.String.IsString Blockfrost.Types.Shared.AssetId.AssetId
instance Servant.Docs.Internal.ToCapture (Servant.API.Capture.Capture "asset" Blockfrost.Types.Shared.AssetId.AssetId)
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Shared.AssetId.AssetId


-- | Hash of the block
module Blockfrost.Types.Shared.BlockHash
newtype BlockHash
BlockHash :: Text -> BlockHash
mkBlockHash :: Text -> BlockHash
unBlockHash :: BlockHash -> Text
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Shared.BlockHash.BlockHash
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Shared.BlockHash.BlockHash
instance Web.Internal.HttpApiData.ToHttpApiData Blockfrost.Types.Shared.BlockHash.BlockHash
instance Web.Internal.HttpApiData.FromHttpApiData Blockfrost.Types.Shared.BlockHash.BlockHash
instance GHC.Generics.Generic Blockfrost.Types.Shared.BlockHash.BlockHash
instance GHC.Show.Show Blockfrost.Types.Shared.BlockHash.BlockHash
instance GHC.Classes.Ord Blockfrost.Types.Shared.BlockHash.BlockHash
instance GHC.Classes.Eq Blockfrost.Types.Shared.BlockHash.BlockHash
instance Data.String.IsString Blockfrost.Types.Shared.BlockHash.BlockHash
instance Servant.Docs.Internal.ToCapture (Servant.API.Capture.Capture "block_hash" Blockfrost.Types.Shared.BlockHash.BlockHash)
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Shared.BlockHash.BlockHash
instance Servant.Docs.Internal.ToCapture (Servant.API.Capture.Capture "hash_or_number" (Data.Either.Either GHC.Integer.Type.Integer Blockfrost.Types.Shared.BlockHash.BlockHash))
instance Web.Internal.HttpApiData.ToHttpApiData (Data.Either.Either GHC.Integer.Type.Integer Blockfrost.Types.Shared.BlockHash.BlockHash)
instance Web.Internal.HttpApiData.FromHttpApiData (Data.Either.Either GHC.Integer.Type.Integer Blockfrost.Types.Shared.BlockHash.BlockHash)


-- | BlockIndex query parameter
module Blockfrost.Types.Shared.BlockIndex

-- | Block height (number) and optional index
data BlockIndex
BlockIndex :: Integer -> Maybe Integer -> BlockIndex
[blockIndexHeight] :: BlockIndex -> Integer
[blockIndexIndex] :: BlockIndex -> Maybe Integer
instance GHC.Generics.Generic Blockfrost.Types.Shared.BlockIndex.BlockIndex
instance GHC.Show.Show Blockfrost.Types.Shared.BlockIndex.BlockIndex
instance GHC.Classes.Eq Blockfrost.Types.Shared.BlockIndex.BlockIndex
instance Web.Internal.HttpApiData.ToHttpApiData Blockfrost.Types.Shared.BlockIndex.BlockIndex
instance Web.Internal.HttpApiData.FromHttpApiData Blockfrost.Types.Shared.BlockIndex.BlockIndex
instance Servant.Docs.Internal.ToParam (Servant.API.QueryParam.QueryParam "from" Blockfrost.Types.Shared.BlockIndex.BlockIndex)
instance Servant.Docs.Internal.ToParam (Servant.API.QueryParam.QueryParam "to" Blockfrost.Types.Shared.BlockIndex.BlockIndex)
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Shared.BlockIndex.BlockIndex


-- | CBOR Servant support and wrapper type
module Blockfrost.Types.Shared.CBOR
data CBOR

-- | Wrapper for CBOR encoded <a>ByteString</a>s used for submitting a
--   transaction
newtype CBORString
CBORString :: ByteString -> CBORString
instance GHC.Show.Show Blockfrost.Types.Shared.CBOR.CBORString
instance GHC.Classes.Eq Blockfrost.Types.Shared.CBOR.CBORString
instance Servant.API.ContentTypes.MimeRender Blockfrost.Types.Shared.CBOR.CBOR Blockfrost.Types.Shared.CBOR.CBORString
instance Servant.API.ContentTypes.MimeUnrender Blockfrost.Types.Shared.CBOR.CBOR Blockfrost.Types.Shared.CBOR.CBORString
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Shared.CBOR.CBORString
instance Servant.API.ContentTypes.Accept Blockfrost.Types.Shared.CBOR.CBOR


-- | Datum Hash newtype
module Blockfrost.Types.Shared.DatumHash

-- | Hash of the datum
newtype DatumHash
DatumHash :: Text -> DatumHash
[unDatumHash] :: DatumHash -> Text
instance Web.Internal.HttpApiData.ToHttpApiData Blockfrost.Types.Shared.DatumHash.DatumHash
instance Web.Internal.HttpApiData.FromHttpApiData Blockfrost.Types.Shared.DatumHash.DatumHash
instance GHC.Generics.Generic Blockfrost.Types.Shared.DatumHash.DatumHash
instance GHC.Classes.Eq Blockfrost.Types.Shared.DatumHash.DatumHash
instance GHC.Show.Show Blockfrost.Types.Shared.DatumHash.DatumHash
instance Data.String.IsString Blockfrost.Types.Shared.DatumHash.DatumHash
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Shared.DatumHash.DatumHash
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Shared.DatumHash.DatumHash
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Shared.DatumHash.DatumHash
instance Servant.Docs.Internal.ToCapture (Servant.API.Capture.Capture "datum_hash" Blockfrost.Types.Shared.DatumHash.DatumHash)


-- | Epoch
module Blockfrost.Types.Shared.Epoch
newtype Epoch
Epoch :: Integer -> Epoch
unEpoch :: Epoch -> Integer
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Shared.Epoch.Epoch
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Shared.Epoch.Epoch
instance Web.Internal.HttpApiData.ToHttpApiData Blockfrost.Types.Shared.Epoch.Epoch
instance Web.Internal.HttpApiData.FromHttpApiData Blockfrost.Types.Shared.Epoch.Epoch
instance GHC.Real.Integral Blockfrost.Types.Shared.Epoch.Epoch
instance GHC.Real.Real Blockfrost.Types.Shared.Epoch.Epoch
instance GHC.Enum.Enum Blockfrost.Types.Shared.Epoch.Epoch
instance GHC.Num.Num Blockfrost.Types.Shared.Epoch.Epoch
instance GHC.Generics.Generic Blockfrost.Types.Shared.Epoch.Epoch
instance GHC.Show.Show Blockfrost.Types.Shared.Epoch.Epoch
instance GHC.Classes.Ord Blockfrost.Types.Shared.Epoch.Epoch
instance GHC.Classes.Eq Blockfrost.Types.Shared.Epoch.Epoch
instance Servant.Docs.Internal.ToCapture (Servant.API.Capture.Capture "epoch_number" Blockfrost.Types.Shared.Epoch.Epoch)
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Shared.Epoch.Epoch


-- | POSIX Milliseconds wrapper
module Blockfrost.Types.Shared.POSIXMillis
data POSIXMillis

-- | POSIX time is the nominal time since 1970-01-01 00:00 UTC
--   
--   To convert from a <a>CTime</a> or <tt>System.Posix.EpochTime</tt>, use
--   <a>realToFrac</a>.
type POSIXTime = NominalDiffTime

-- | Convert <a>Integer</a> milliseconds to <a>POSIXTime</a>
millisecondsToPosix :: Integer -> POSIXTime

-- | Convert <a>POSIXTime</a> to <a>Integer</a> milliseconds
posixToMilliseconds :: POSIXTime -> Integer
seconds :: POSIXTime -> POSIXMillis
instance GHC.Generics.Generic Blockfrost.Types.Shared.POSIXMillis.POSIXMillis
instance GHC.Classes.Eq Blockfrost.Types.Shared.POSIXMillis.POSIXMillis
instance GHC.Show.Show Blockfrost.Types.Shared.POSIXMillis.POSIXMillis
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Shared.POSIXMillis.POSIXMillis
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Shared.POSIXMillis.POSIXMillis
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Shared.POSIXMillis.POSIXMillis
instance Test.QuickCheck.Arbitrary.Arbitrary Blockfrost.Types.Shared.POSIXMillis.POSIXMillis


-- | PolicyId
module Blockfrost.Types.Shared.PolicyId

-- | Minting policy Id
newtype PolicyId
PolicyId :: Text -> PolicyId
mkPolicyId :: Text -> PolicyId
unPolicyId :: PolicyId -> Text
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Shared.PolicyId.PolicyId
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Shared.PolicyId.PolicyId
instance Web.Internal.HttpApiData.ToHttpApiData Blockfrost.Types.Shared.PolicyId.PolicyId
instance Web.Internal.HttpApiData.FromHttpApiData Blockfrost.Types.Shared.PolicyId.PolicyId
instance GHC.Generics.Generic Blockfrost.Types.Shared.PolicyId.PolicyId
instance GHC.Show.Show Blockfrost.Types.Shared.PolicyId.PolicyId
instance GHC.Classes.Eq Blockfrost.Types.Shared.PolicyId.PolicyId
instance Data.String.IsString Blockfrost.Types.Shared.PolicyId.PolicyId
instance Servant.Docs.Internal.ToCapture (Servant.API.Capture.Capture "policy_id" Blockfrost.Types.Shared.PolicyId.PolicyId)
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Shared.PolicyId.PolicyId


-- | Pool identifier
module Blockfrost.Types.Shared.PoolId
newtype PoolId
PoolId :: Text -> PoolId
mkPoolId :: Text -> PoolId
unPoolId :: PoolId -> Text
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Shared.PoolId.PoolId
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Shared.PoolId.PoolId
instance Web.Internal.HttpApiData.ToHttpApiData Blockfrost.Types.Shared.PoolId.PoolId
instance Web.Internal.HttpApiData.FromHttpApiData Blockfrost.Types.Shared.PoolId.PoolId
instance GHC.Generics.Generic Blockfrost.Types.Shared.PoolId.PoolId
instance GHC.Show.Show Blockfrost.Types.Shared.PoolId.PoolId
instance GHC.Classes.Eq Blockfrost.Types.Shared.PoolId.PoolId
instance Data.String.IsString Blockfrost.Types.Shared.PoolId.PoolId
instance Servant.Docs.Internal.ToCapture (Servant.API.Capture.Capture "pool_id" Blockfrost.Types.Shared.PoolId.PoolId)
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Shared.PoolId.PoolId


-- | Quantity wrapper
module Blockfrost.Types.Shared.Quantity
newtype Quantity
Quantity :: Integer -> Quantity
unQuantity :: Quantity -> Integer
instance Web.Internal.HttpApiData.ToHttpApiData Blockfrost.Types.Shared.Quantity.Quantity
instance Web.Internal.HttpApiData.FromHttpApiData Blockfrost.Types.Shared.Quantity.Quantity
instance GHC.Read.Read Blockfrost.Types.Shared.Quantity.Quantity
instance GHC.Num.Num Blockfrost.Types.Shared.Quantity.Quantity
instance GHC.Generics.Generic Blockfrost.Types.Shared.Quantity.Quantity
instance GHC.Show.Show Blockfrost.Types.Shared.Quantity.Quantity
instance GHC.Classes.Eq Blockfrost.Types.Shared.Quantity.Quantity
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Shared.Quantity.Quantity
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Shared.Quantity.Quantity
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Shared.Quantity.Quantity


-- | Script Hash newtype
module Blockfrost.Types.Shared.ScriptHash

-- | Script Hash newtype
newtype ScriptHash
ScriptHash :: Text -> ScriptHash
[unScriptHash] :: ScriptHash -> Text
instance Web.Internal.HttpApiData.ToHttpApiData Blockfrost.Types.Shared.ScriptHash.ScriptHash
instance Web.Internal.HttpApiData.FromHttpApiData Blockfrost.Types.Shared.ScriptHash.ScriptHash
instance GHC.Generics.Generic Blockfrost.Types.Shared.ScriptHash.ScriptHash
instance GHC.Classes.Eq Blockfrost.Types.Shared.ScriptHash.ScriptHash
instance GHC.Show.Show Blockfrost.Types.Shared.ScriptHash.ScriptHash
instance Data.String.IsString Blockfrost.Types.Shared.ScriptHash.ScriptHash
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Shared.ScriptHash.ScriptHash
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Shared.ScriptHash.ScriptHash
instance Data.Aeson.Types.ToJSON.ToJSON [Blockfrost.Types.Shared.ScriptHash.ScriptHash]
instance Data.Aeson.Types.FromJSON.FromJSON [Blockfrost.Types.Shared.ScriptHash.ScriptHash]
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Shared.ScriptHash.ScriptHash
instance Servant.Docs.Internal.ToCapture (Servant.API.Capture.Capture "script_hash" Blockfrost.Types.Shared.ScriptHash.ScriptHash)


-- | Slot wrapper
module Blockfrost.Types.Shared.Slot
newtype Slot
Slot :: Integer -> Slot
unSlot :: Slot -> Integer
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Shared.Slot.Slot
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Shared.Slot.Slot
instance Web.Internal.HttpApiData.ToHttpApiData Blockfrost.Types.Shared.Slot.Slot
instance Web.Internal.HttpApiData.FromHttpApiData Blockfrost.Types.Shared.Slot.Slot
instance GHC.Real.Integral Blockfrost.Types.Shared.Slot.Slot
instance GHC.Real.Real Blockfrost.Types.Shared.Slot.Slot
instance GHC.Enum.Enum Blockfrost.Types.Shared.Slot.Slot
instance GHC.Num.Num Blockfrost.Types.Shared.Slot.Slot
instance GHC.Generics.Generic Blockfrost.Types.Shared.Slot.Slot
instance GHC.Show.Show Blockfrost.Types.Shared.Slot.Slot
instance GHC.Classes.Ord Blockfrost.Types.Shared.Slot.Slot
instance GHC.Classes.Eq Blockfrost.Types.Shared.Slot.Slot
instance Servant.Docs.Internal.ToCapture (Servant.API.Capture.Capture "slot_number" Blockfrost.Types.Shared.Slot.Slot)
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Shared.Slot.Slot


-- | Transaction Id
module Blockfrost.Types.Shared.TxHash

-- | Id (hash) of the transaction
newtype TxHash
TxHash :: Text -> TxHash
[unTxHash] :: TxHash -> Text
instance Web.Internal.HttpApiData.ToHttpApiData Blockfrost.Types.Shared.TxHash.TxHash
instance Web.Internal.HttpApiData.FromHttpApiData Blockfrost.Types.Shared.TxHash.TxHash
instance GHC.Generics.Generic Blockfrost.Types.Shared.TxHash.TxHash
instance GHC.Classes.Ord Blockfrost.Types.Shared.TxHash.TxHash
instance GHC.Classes.Eq Blockfrost.Types.Shared.TxHash.TxHash
instance GHC.Show.Show Blockfrost.Types.Shared.TxHash.TxHash
instance Data.String.IsString Blockfrost.Types.Shared.TxHash.TxHash
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Shared.TxHash.TxHash
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Shared.TxHash.TxHash
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Shared.TxHash.TxHash
instance Servant.Docs.Internal.ToCapture (Servant.API.Capture.Capture "hash" Blockfrost.Types.Shared.TxHash.TxHash)


-- | Shared types and utilities
module Blockfrost.Types.Shared
data ToLower
aesonOptions :: Maybe String -> Options


-- | Types for Nut.link servics
module Blockfrost.Types.NutLink

-- | Specific address metadata
data NutlinkAddress
NutlinkAddress :: Address -> Text -> Text -> Maybe Value -> NutlinkAddress

-- | Bech32 encoded address
[_nutlinkAddressAddress] :: NutlinkAddress -> Address

-- | URL of the specific metadata file
[_nutlinkAddressMetadataUrl] :: NutlinkAddress -> Text

-- | Hash of the metadata file
[_nutlinkAddressMetadataHash] :: NutlinkAddress -> Text

-- | The cached metadata of the metadata_url file.
[_nutlinkAddressMetadata] :: NutlinkAddress -> Maybe Value

-- | Ticker for specific metadata oracle
data NutlinkAddressTicker
NutlinkAddressTicker :: Text -> Integer -> Integer -> NutlinkAddressTicker

-- | Name of the ticker
[_nutlinkAddressTickerName] :: NutlinkAddressTicker -> Text

-- | Number of ticker records
[_nutlinkAddressTickerCount] :: NutlinkAddressTicker -> Integer

-- | Block height of the latest record
[_nutlinkAddressTickerLatestBlock] :: NutlinkAddressTicker -> Integer

-- | Specific ticker record
data NutlinkTicker
NutlinkTicker :: TxHash -> Integer -> Integer -> Value -> NutlinkTicker

-- | Hash of the transaction
[_nutlinkTickerTxHash] :: NutlinkTicker -> TxHash

-- | Block height of the record
[_nutlinkTickerBlockHeight] :: NutlinkTicker -> Integer

-- | Transaction index within the block
[_nutlinkTickerTxIndex] :: NutlinkTicker -> Integer

-- | Content of the ticker
[_nutlinkTickerPayload] :: NutlinkTicker -> Value
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.NutLink.NutlinkAddress
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.NutLink.NutlinkAddress
instance GHC.Generics.Generic Blockfrost.Types.NutLink.NutlinkAddress
instance GHC.Classes.Eq Blockfrost.Types.NutLink.NutlinkAddress
instance GHC.Show.Show Blockfrost.Types.NutLink.NutlinkAddress
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.NutLink.NutlinkAddressTicker
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.NutLink.NutlinkAddressTicker
instance GHC.Generics.Generic Blockfrost.Types.NutLink.NutlinkAddressTicker
instance GHC.Classes.Eq Blockfrost.Types.NutLink.NutlinkAddressTicker
instance GHC.Show.Show Blockfrost.Types.NutLink.NutlinkAddressTicker
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.NutLink.NutlinkTicker
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.NutLink.NutlinkTicker
instance GHC.Generics.Generic Blockfrost.Types.NutLink.NutlinkTicker
instance GHC.Classes.Eq Blockfrost.Types.NutLink.NutlinkTicker
instance GHC.Show.Show Blockfrost.Types.NutLink.NutlinkTicker
instance Servant.Docs.Internal.ToSample Blockfrost.Types.NutLink.NutlinkTicker
instance Data.Aeson.Types.ToJSON.ToJSON (Blockfrost.Types.Shared.Address.Address, Blockfrost.Types.NutLink.NutlinkTicker)
instance Data.Aeson.Types.FromJSON.FromJSON (Blockfrost.Types.Shared.Address.Address, Blockfrost.Types.NutLink.NutlinkTicker)
instance Servant.Docs.Internal.ToSample Blockfrost.Types.NutLink.NutlinkAddressTicker
instance Servant.Docs.Internal.ToSample Blockfrost.Types.NutLink.NutlinkAddress


-- | Types for IPFS servics
module Blockfrost.Types.IPFS

-- | IPFS Add response
data IPFSAdd
IPFSAdd :: Text -> Text -> Quantity -> IPFSAdd

-- | Name of the file
[_ipfsAddName] :: IPFSAdd -> Text

-- | IPFS hash of the file
[_ipfsAddIpfsHash] :: IPFSAdd -> Text

-- | Size of the IPFS node
[_ipfsAddSize] :: IPFSAdd -> Quantity

-- | IPFS Pin Add response
data IPFSPinChange
IPFSPinChange :: Text -> PinState -> IPFSPinChange

-- | IPFS hash of pinned object
[_ipfsPinChangeIpfsHash] :: IPFSPinChange -> Text

-- | State of the pin action
[_ipfsPinChangeState] :: IPFSPinChange -> PinState

-- | IPFS Pin information
data IPFSPin
IPFSPin :: POSIXTime -> POSIXTime -> Text -> Quantity -> PinState -> IPFSPin

-- | Creation time of the IPFS object on our backends
[_ipfsPinTimeCreated] :: IPFSPin -> POSIXTime

-- | Pin time of the IPFS object on our backends
[_ipfsPinTimePinned] :: IPFSPin -> POSIXTime

-- | IPFS hash of the pinned object
[_ipfsPinIpfsHash] :: IPFSPin -> Text

-- | Size of the IPFS node
[_ipfsPinSize] :: IPFSPin -> Quantity

-- | State of the pinned object
[_ipfsPinState] :: IPFSPin -> PinState

-- | State of the pinned object, which is <tt>Queued</tt> when we are
--   retriving object.
--   
--   If this is successful the state is changed to <tt>Pinned</tt> or
--   <tt>Failed</tt> if not. The state <tt>Gc</tt> means the pinned item
--   has been garbage collected due to account being over storage quota or
--   after it has been moved to <tt>Unpinned</tt> state by removing the
--   object pin.
data PinState
Queued :: PinState
Pinned :: PinState
Unpinned :: PinState
Failed :: PinState
Gc :: PinState
newtype IPFSData
IPFSData :: ByteString -> IPFSData
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.IPFS.IPFSAdd
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.IPFS.IPFSAdd
instance GHC.Generics.Generic Blockfrost.Types.IPFS.IPFSAdd
instance GHC.Classes.Eq Blockfrost.Types.IPFS.IPFSAdd
instance GHC.Show.Show Blockfrost.Types.IPFS.IPFSAdd
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.IPFS.PinState
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.IPFS.PinState
instance GHC.Generics.Generic Blockfrost.Types.IPFS.PinState
instance GHC.Classes.Ord Blockfrost.Types.IPFS.PinState
instance GHC.Show.Show Blockfrost.Types.IPFS.PinState
instance GHC.Classes.Eq Blockfrost.Types.IPFS.PinState
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.IPFS.IPFSPinChange
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.IPFS.IPFSPinChange
instance GHC.Generics.Generic Blockfrost.Types.IPFS.IPFSPinChange
instance GHC.Classes.Eq Blockfrost.Types.IPFS.IPFSPinChange
instance GHC.Show.Show Blockfrost.Types.IPFS.IPFSPinChange
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.IPFS.IPFSPin
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.IPFS.IPFSPin
instance GHC.Generics.Generic Blockfrost.Types.IPFS.IPFSPin
instance GHC.Classes.Eq Blockfrost.Types.IPFS.IPFSPin
instance GHC.Show.Show Blockfrost.Types.IPFS.IPFSPin
instance GHC.Generics.Generic Blockfrost.Types.IPFS.IPFSData
instance GHC.Classes.Eq Blockfrost.Types.IPFS.IPFSData
instance GHC.Show.Show Blockfrost.Types.IPFS.IPFSData
instance Servant.Docs.Internal.ToSample Blockfrost.Types.IPFS.IPFSData
instance Servant.API.ContentTypes.MimeRender Servant.API.ContentTypes.OctetStream Blockfrost.Types.IPFS.IPFSData
instance Servant.API.ContentTypes.MimeUnrender Servant.API.ContentTypes.OctetStream Blockfrost.Types.IPFS.IPFSData
instance Servant.API.ContentTypes.MimeRender Servant.API.ContentTypes.PlainText Blockfrost.Types.IPFS.IPFSData
instance Servant.API.ContentTypes.MimeUnrender Servant.API.ContentTypes.PlainText Blockfrost.Types.IPFS.IPFSData
instance Servant.Docs.Internal.ToSample Blockfrost.Types.IPFS.IPFSPin
instance Servant.Docs.Internal.ToSample Blockfrost.Types.IPFS.IPFSPinChange
instance Servant.Docs.Internal.ToSample Blockfrost.Types.IPFS.IPFSAdd


-- | Types for common servics
module Blockfrost.Types.Common

-- | Root endpoint reply
data URLVersion
URLVersion :: Text -> Text -> URLVersion
[_urlVersionUrl] :: URLVersion -> Text
[_urlVersionVersion] :: URLVersion -> Text

-- | Health endpoint reply
newtype Healthy
Healthy :: Bool -> Healthy
[isHealthy] :: Healthy -> Bool

-- | Health clock endpoint reply
newtype ServerTime
ServerTime :: POSIXTime -> ServerTime
[serverTime] :: ServerTime -> POSIXTime

-- | Metrics response
data Metric
Metric :: POSIXTime -> Integer -> Metric
[_metricTime] :: Metric -> POSIXTime
[_metricCalls] :: Metric -> Integer
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Common.URLVersion
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Common.URLVersion
instance GHC.Generics.Generic Blockfrost.Types.Common.URLVersion
instance GHC.Classes.Eq Blockfrost.Types.Common.URLVersion
instance GHC.Show.Show Blockfrost.Types.Common.URLVersion
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Common.Healthy
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Common.Healthy
instance GHC.Generics.Generic Blockfrost.Types.Common.Healthy
instance GHC.Classes.Eq Blockfrost.Types.Common.Healthy
instance GHC.Show.Show Blockfrost.Types.Common.Healthy
instance GHC.Generics.Generic Blockfrost.Types.Common.ServerTime
instance GHC.Classes.Eq Blockfrost.Types.Common.ServerTime
instance GHC.Show.Show Blockfrost.Types.Common.ServerTime
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Common.Metric
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Common.Metric
instance GHC.Generics.Generic Blockfrost.Types.Common.Metric
instance GHC.Classes.Eq Blockfrost.Types.Common.Metric
instance GHC.Show.Show Blockfrost.Types.Common.Metric
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Common.Metric
instance Data.Aeson.Types.ToJSON.ToJSON (Data.Text.Internal.Text, Blockfrost.Types.Common.Metric)
instance Data.Aeson.Types.FromJSON.FromJSON (Data.Text.Internal.Text, Blockfrost.Types.Common.Metric)
instance Servant.Docs.Internal.ToSample (Data.Text.Internal.Text, Blockfrost.Types.Common.Metric)
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Common.ServerTime
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Common.ServerTime
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Common.ServerTime
instance Test.QuickCheck.Arbitrary.Arbitrary Blockfrost.Types.Common.ServerTime
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Common.Healthy
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Common.URLVersion


-- | Cardano Pools reponses
module Blockfrost.Types.Cardano.Pools

-- | Retirement epoch for pool
data PoolEpoch
PoolEpoch :: PoolId -> Epoch -> PoolEpoch

-- | Bech32 encoded pool ID
[_poolEpochPoolId] :: PoolEpoch -> PoolId

-- | Retirement epoch number
[_poolEpochEpoch] :: PoolEpoch -> Epoch

-- | Detailed pool information
data PoolInfo
PoolInfo :: PoolId -> Text -> Text -> Integer -> Lovelaces -> Double -> Double -> Double -> Lovelaces -> Double -> Lovelaces -> Lovelaces -> Double -> Lovelaces -> Address -> [Address] -> [Text] -> [Text] -> PoolInfo

-- | Bech32 encoded pool ID
[_poolInfoPoolId] :: PoolInfo -> PoolId

-- | Hexadecimal pool ID.
[_poolInfoHex] :: PoolInfo -> Text

-- | VRF key hash
[_poolInfoVrfKey] :: PoolInfo -> Text

-- | Total minted blocks
[_poolInfoBlocksMinted] :: PoolInfo -> Integer
[_poolInfoLiveStake] :: PoolInfo -> Lovelaces
[_poolInfoLiveSize] :: PoolInfo -> Double
[_poolInfoLiveSaturation] :: PoolInfo -> Double
[_poolInfoLiveDelegators] :: PoolInfo -> Double
[_poolInfoActiveStake] :: PoolInfo -> Lovelaces
[_poolInfoActiveSize] :: PoolInfo -> Double

-- | Stake pool certificate pledge
[_poolInfoDeclaredPledge] :: PoolInfo -> Lovelaces

-- | Stake pool current pledge
[_poolInfoLivePledge] :: PoolInfo -> Lovelaces

-- | Margin tax cost of the stake pool
[_poolInfoMarginCost] :: PoolInfo -> Double

-- | Fixed tax cost of the stake pool
[_poolInfoFixedCost] :: PoolInfo -> Lovelaces

-- | Bech32 reward account of the stake pool
[_poolInfoRewardAccount] :: PoolInfo -> Address
[_poolInfoOwners] :: PoolInfo -> [Address]
[_poolInfoRegistration] :: PoolInfo -> [Text]
[_poolInfoRetirement] :: PoolInfo -> [Text]

-- | History of a stake pool parameters over epochs
data PoolHistory
PoolHistory :: Epoch -> Integer -> Lovelaces -> Double -> Integer -> Lovelaces -> Lovelaces -> PoolHistory

-- | Epoch number
[_poolHistoryEpoch] :: PoolHistory -> Epoch

-- | Number of blocks created by pool
[_poolHistoryBlocks] :: PoolHistory -> Integer

-- | Active (Snapshot of live stake 2 epochs ago) stake in Lovelaces
[_poolHistoryActiveStake] :: PoolHistory -> Lovelaces

-- | Pool size (percentage) of overall active stake at that epoch
[_poolHistoryActiveSize] :: PoolHistory -> Double

-- | Number of delegators for epoch
[_poolHistoryDelegatorsCount] :: PoolHistory -> Integer

-- | Total rewards received before distribution to delegators
[_poolHistoryRewards] :: PoolHistory -> Lovelaces

-- | Pool operator rewards
[_poolHistoryFees] :: PoolHistory -> Lovelaces

-- | Stake pool registration metadata
data PoolMetadata
PoolMetadata :: PoolId -> Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PoolMetadata

-- | Bech32 pool ID
[_poolMetadataPoolId] :: PoolMetadata -> PoolId

-- | Hexadecimal pool ID
[_poolMetadataHex] :: PoolMetadata -> Text

-- | URL to the stake pool metadata
[_poolMetadataUrl] :: PoolMetadata -> Maybe Text

-- | Hash of the metadata file
[_poolMetadataHash] :: PoolMetadata -> Maybe Text

-- | Ticker of the stake pool
[_poolMetadataTicker] :: PoolMetadata -> Maybe Text

-- | Name of the stake pool
[_poolMetadataName] :: PoolMetadata -> Maybe Text

-- | Description of the stake pool
[_poolMetadataDescription] :: PoolMetadata -> Maybe Text

-- | Home page of the stake pool
[_poolMetadataHomepage] :: PoolMetadata -> Maybe Text

-- | Relays of a stake pool
data PoolRelay
PoolRelay :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Integer -> PoolRelay

-- | IPv4 address of the relay
[_poolRelayIpv4] :: PoolRelay -> Maybe Text

-- | IPv6 address of the relay
[_poolRelayIpv6] :: PoolRelay -> Maybe Text

-- | DNS name of the relay
[_poolRelayDns] :: PoolRelay -> Maybe Text

-- | DNS SRV entry of the relay
[_poolRelayDnsSrv] :: PoolRelay -> Maybe Text

-- | Network port of the relay
[_poolRelayPort] :: PoolRelay -> Integer

-- | Stake pool delegator
data PoolDelegator
PoolDelegator :: Text -> Lovelaces -> PoolDelegator

-- | Bech32 encoded stake addresses
[_poolDelegatorAddress] :: PoolDelegator -> Text

-- | Currently delegated amount
[_poolDelegatorLiveStake] :: PoolDelegator -> Lovelaces

-- | Certificate update to the stake pool
data PoolUpdate
PoolUpdate :: TxHash -> Integer -> PoolRegistrationAction -> PoolUpdate

-- | Transaction ID
[_poolUpdateTxHash] :: PoolUpdate -> TxHash

-- | Certificate within the transaction
[_poolUpdateCertIndex] :: PoolUpdate -> Integer

-- | Action in the certificate
[_poolUpdateAction] :: PoolUpdate -> PoolRegistrationAction

-- | Registration action of a pool
data PoolRegistrationAction
PoolRegistered :: PoolRegistrationAction
PoolDeregistered :: PoolRegistrationAction

-- | Example of <a>PoolRelay</a>
samplePoolRelay :: PoolRelay
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Pools.PoolEpoch
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Pools.PoolEpoch
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Pools.PoolEpoch
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Pools.PoolEpoch
instance GHC.Show.Show Blockfrost.Types.Cardano.Pools.PoolEpoch
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Pools.PoolInfo
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Pools.PoolInfo
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Pools.PoolInfo
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Pools.PoolInfo
instance GHC.Show.Show Blockfrost.Types.Cardano.Pools.PoolInfo
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Pools.PoolHistory
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Pools.PoolHistory
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Pools.PoolHistory
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Pools.PoolHistory
instance GHC.Show.Show Blockfrost.Types.Cardano.Pools.PoolHistory
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Pools.PoolMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Pools.PoolMetadata
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Pools.PoolMetadata
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Pools.PoolMetadata
instance GHC.Show.Show Blockfrost.Types.Cardano.Pools.PoolMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Pools.PoolRelay
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Pools.PoolRelay
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Pools.PoolRelay
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Pools.PoolRelay
instance GHC.Show.Show Blockfrost.Types.Cardano.Pools.PoolRelay
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Pools.PoolDelegator
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Pools.PoolDelegator
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Pools.PoolDelegator
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Pools.PoolDelegator
instance GHC.Show.Show Blockfrost.Types.Cardano.Pools.PoolDelegator
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Pools.PoolRegistrationAction
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Pools.PoolRegistrationAction
instance GHC.Show.Show Blockfrost.Types.Cardano.Pools.PoolRegistrationAction
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Pools.PoolUpdate
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Pools.PoolUpdate
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Pools.PoolUpdate
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Pools.PoolUpdate
instance GHC.Show.Show Blockfrost.Types.Cardano.Pools.PoolUpdate
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Pools.PoolUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Pools.PoolRegistrationAction
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Pools.PoolRegistrationAction
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Pools.PoolRegistrationAction
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Pools.PoolDelegator
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Pools.PoolRelay
instance Data.Aeson.Types.ToJSON.ToJSON (GHC.Maybe.Maybe Blockfrost.Types.Cardano.Pools.PoolMetadata)
instance Data.Aeson.Types.FromJSON.FromJSON (GHC.Maybe.Maybe Blockfrost.Types.Cardano.Pools.PoolMetadata)
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Pools.PoolMetadata
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Pools.PoolHistory
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Pools.PoolInfo
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Pools.PoolEpoch


-- | Cardano Transactions responses
module Blockfrost.Types.Cardano.Transactions

-- | Information about a transaction
data Transaction
Transaction :: Text -> BlockHash -> Integer -> Slot -> Integer -> [Amount] -> Lovelaces -> Lovelaces -> Integer -> Maybe Text -> Maybe Text -> Integer -> Integer -> Integer -> Integer -> Integer -> Integer -> Integer -> Integer -> Integer -> Bool -> Transaction

-- | Transaction hash
[_transactionHash] :: Transaction -> Text

-- | Block hash
[_transactionBlock] :: Transaction -> BlockHash

-- | Block number
[_transactionBlockHeight] :: Transaction -> Integer

-- | Slot number
[_transactionSlot] :: Transaction -> Slot

-- | Transaction index within the block
[_transactionIndex] :: Transaction -> Integer

-- | Transaction outputs
[_transactionOutputAmount] :: Transaction -> [Amount]

-- | Fees of the transaction in Lovelaces
[_transactionFees] :: Transaction -> Lovelaces

-- | Deposit within the transaction in Lovelaces
[_transactionDeposit] :: Transaction -> Lovelaces

-- | Size of the transaction in Bytes
[_transactionSize] :: Transaction -> Integer

-- | Left (included) endpoint of the timelock validity intervals
[_transactionInvalidBefore] :: Transaction -> Maybe Text

-- | Right (excluded) endpoint of the timelock validity intervals
[_transactionInvalidHereafter] :: Transaction -> Maybe Text

-- | Count of UTXOs within the transaction
[_transactionUtxoCount] :: Transaction -> Integer

-- | Count of the withdrawals within the transaction
[_transactionWithdrawalCount] :: Transaction -> Integer

-- | Count of the MIR certificates within the transaction
[_transactionMirCertCount] :: Transaction -> Integer

-- | Count of the delegations within the transaction
[_transactionDelegationCount] :: Transaction -> Integer

-- | Count of the stake keys (de)registration and delegation certificates
--   within the transaction
[_transactionStakeCertCount] :: Transaction -> Integer

-- | Count of the stake pool registration and update certificates within
--   the transaction
[_transactionPoolUpdateCount] :: Transaction -> Integer

-- | Count of the stake pool retirement certificates within the transaction
[_transactionPoolRetireCount] :: Transaction -> Integer

-- | Count of asset mints and burns within the transaction
[_transactionAssetMintOrBurnCount] :: Transaction -> Integer

-- | Count of redeemers within the transaction
[_transactionRedeemerCount] :: Transaction -> Integer

-- | True if this is a valid transaction, False in case of contract
--   validation failure
[_transactionValidContract] :: Transaction -> Bool

-- | Transaction UTxOs
data TransactionUtxos
TransactionUtxos :: TxHash -> [UtxoInput] -> [UtxoOutput] -> TransactionUtxos

-- | Transaction hash
[_transactionUtxosHash] :: TransactionUtxos -> TxHash

-- | Transaction inputs
[_transactionUtxosInputs] :: TransactionUtxos -> [UtxoInput]

-- | Transaction outputs
[_transactionUtxosOutputs] :: TransactionUtxos -> [UtxoOutput]

-- | Transaction input UTxO
data UtxoInput
UtxoInput :: Address -> [Amount] -> TxHash -> Integer -> Bool -> Maybe DatumHash -> UtxoInput

-- | Input address
[_utxoInputAddress] :: UtxoInput -> Address
[_utxoInputAmount] :: UtxoInput -> [Amount]

-- | Hash of the UTXO transaction
[_utxoInputTxHash] :: UtxoInput -> TxHash

-- | UTXO index in the transaction
[_utxoInputOutputIndex] :: UtxoInput -> Integer

-- | UTXO is a script collateral input
[_utxoInputCollateral] :: UtxoInput -> Bool

-- | The hash of the transaction output datum
[_utxoInputDataHash] :: UtxoInput -> Maybe DatumHash

-- | Transaction output UTxO
data UtxoOutput
UtxoOutput :: Address -> [Amount] -> Maybe DatumHash -> Integer -> UtxoOutput

-- | Output address
[_utxoOutputAddress] :: UtxoOutput -> Address

-- | Transaction output amounts
[_utxoOutputAmount] :: UtxoOutput -> [Amount]

-- | The hash of the transaction output datum
[_utxoOutputDataHash] :: UtxoOutput -> Maybe DatumHash

-- | UTXO index in the transaction
[_utxoOutputOutputIndex] :: UtxoOutput -> Integer

-- | Validation purpose
data ValidationPurpose
Spend :: ValidationPurpose
Mint :: ValidationPurpose
Cert :: ValidationPurpose
Reward :: ValidationPurpose

-- | Transaction redeemer
data TransactionRedeemer
TransactionRedeemer :: Integer -> ValidationPurpose -> ScriptHash -> DatumHash -> Quantity -> Quantity -> Lovelaces -> TransactionRedeemer

-- | Index of the redeemer within a transaction
[_transactionRedeemerTxIndex] :: TransactionRedeemer -> Integer

-- | Validation purpose
[_transactionRedeemerPurpose] :: TransactionRedeemer -> ValidationPurpose

-- | Script hash
[_transactionRedeemerScriptHash] :: TransactionRedeemer -> ScriptHash

-- | Datum hash
[_transactionRedeemerDatumHash] :: TransactionRedeemer -> DatumHash

-- | The budget in Memory to run a script
[_transactionRedeemerUnitMem] :: TransactionRedeemer -> Quantity

-- | The budget in Steps to run a script
[_transactionRedeemerUnitSteps] :: TransactionRedeemer -> Quantity

-- | The fee consumed to run the script
[_transactionRedeemerFee] :: TransactionRedeemer -> Lovelaces

-- | Information about (de-)registration of a stake address within a
--   transaction
data TransactionStake
TransactionStake :: Integer -> Address -> Bool -> TransactionStake

-- | Index of the certificate within the transaction
[_transactionStakeCertIndex] :: TransactionStake -> Integer

-- | Delegation stake address
[_transactionStakeAddress] :: TransactionStake -> Address

-- | Registration boolean, false if deregistration
[_transactionStakeRegistration] :: TransactionStake -> Bool

-- | Information about delegation certificates of a specific transaction
data TransactionDelegation
TransactionDelegation :: Integer -> Address -> PoolId -> Epoch -> TransactionDelegation

-- | Index of the certificate within the transaction
[_transactionDelegationCertIndex] :: TransactionDelegation -> Integer

-- | Delegation stake address
[_transactionDelegationAddress] :: TransactionDelegation -> Address

-- | Bech32 ID of delegated stake pool
[_transactionDelegationPoolId] :: TransactionDelegation -> PoolId

-- | Epoch in which the delegation becomes active
[_transactionDelegationActiveEpoch] :: TransactionDelegation -> Epoch

-- | Information about withdrawals of a specific transaction
data TransactionWithdrawal
TransactionWithdrawal :: Address -> Lovelaces -> TransactionWithdrawal

-- | Bech32 withdrawal address
[_transactionWithdrawalAddress] :: TransactionWithdrawal -> Address

-- | Withdrawal amount in Lovelaces
[_transactionWithdrawalAmount] :: TransactionWithdrawal -> Lovelaces

-- | Pot from which MIRs are transferred
data Pot
Reserve :: Pot
Treasury :: Pot

-- | Information about Move Instantaneous Rewards (MIRs) of a specific
--   transaction
data TransactionMir
TransactionMir :: Pot -> Integer -> Address -> Lovelaces -> TransactionMir

-- | Source of MIR funds
[_transactionMirPot] :: TransactionMir -> Pot

-- | Index of the certificate within the transaction
[_transactionMirCertIndex] :: TransactionMir -> Integer

-- | Bech32 stake address
[_transactionMirAddress] :: TransactionMir -> Address

-- | MIR amount in Lovelaces
[_transactionMirAmount] :: TransactionMir -> Lovelaces

-- | Information about stake pool registration and update certificates of a
--   specific transaction
data TransactionPoolUpdate
TransactionPoolUpdate :: Integer -> PoolId -> Text -> Lovelaces -> Double -> Lovelaces -> Address -> [Address] -> Maybe PoolUpdateMetadata -> [PoolRelay] -> Epoch -> TransactionPoolUpdate

-- | Index of the certificate within the transaction
[_transactionPoolUpdateCertIndex] :: TransactionPoolUpdate -> Integer

-- | Bech32 encoded pool ID
[_transactionPoolUpdatePoolId] :: TransactionPoolUpdate -> PoolId

-- | VRF key hash
[_transactionPoolUpdateVrfKey] :: TransactionPoolUpdate -> Text

-- | Stake pool certificate pledge in Lovelaces
[_transactionPoolUpdatePledge] :: TransactionPoolUpdate -> Lovelaces

-- | Margin tax cost of the stake pool
[_transactionPoolUpdateMarginCost] :: TransactionPoolUpdate -> Double

-- | Fixed tax cost of the stake pool in Lovelaces
[_transactionPoolUpdateFixedCost] :: TransactionPoolUpdate -> Lovelaces

-- | Bech32 reward account of the stake pool
[_transactionPoolUpdateRewardAccount] :: TransactionPoolUpdate -> Address
[_transactionPoolUpdateOwners] :: TransactionPoolUpdate -> [Address]
[_transactionPoolUpdateMetadata] :: TransactionPoolUpdate -> Maybe PoolUpdateMetadata
[_transactionPoolUpdateRelays] :: TransactionPoolUpdate -> [PoolRelay]

-- | Epoch that the delegation becomes active
[_transactionPoolUpdateActiveEpoch] :: TransactionPoolUpdate -> Epoch

-- | Update of a pool metadata
data PoolUpdateMetadata
PoolUpdateMetadata :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PoolUpdateMetadata

-- | URL to the stake pool metadata
[_poolUpdateMetadataUrl] :: PoolUpdateMetadata -> Maybe Text

-- | Hash of the metadata file
[_poolUpdateMetadataHash] :: PoolUpdateMetadata -> Maybe Text

-- | Ticker of the stake pool
[_poolUpdateMetadataTicker] :: PoolUpdateMetadata -> Maybe Text

-- | Name of the stake pool
[_poolUpdateMetadataName] :: PoolUpdateMetadata -> Maybe Text

-- | Description of the stake pool
[_poolUpdateMetadataDescription] :: PoolUpdateMetadata -> Maybe Text

-- | Home page of the stake pool
[_poolUpdateMetadataHomepage] :: PoolUpdateMetadata -> Maybe Text

-- | Information about stake pool retirements within a specific transaction
data TransactionPoolRetiring
TransactionPoolRetiring :: Integer -> PoolId -> Epoch -> TransactionPoolRetiring

-- | Index of the certificate within the transaction
[_transactionPoolRetiringCertIndex] :: TransactionPoolRetiring -> Integer

-- | Bech32 stake pool ID
[_transactionPoolRetiringPoolId] :: TransactionPoolRetiring -> PoolId

-- | Retiring epoch
[_transactionPoolRetiringRetiringEpoch] :: TransactionPoolRetiring -> Epoch

-- | Transaction metadata in JSON
data TransactionMetaJSON
TransactionMetaJSON :: Text -> Maybe Value -> TransactionMetaJSON

-- | Metadata label
[_transactionMetaJSONLabel] :: TransactionMetaJSON -> Text

-- | Content of the JSON metadata
[_transactionMetaJSONJSONMetadata] :: TransactionMetaJSON -> Maybe Value

-- | Transaction metadata in CBOR
data TransactionMetaCBOR
TransactionMetaCBOR :: Text -> Maybe Text -> TransactionMetaCBOR

-- | Metadata label
[_transactionMetaCBORLabel] :: TransactionMetaCBOR -> Text

-- | Content of the CBOR metadata
[_transactionMetaCBORMetadata] :: TransactionMetaCBOR -> Maybe Text
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Transactions.Transaction
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Transactions.Transaction
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Transactions.Transaction
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Transactions.Transaction
instance GHC.Show.Show Blockfrost.Types.Cardano.Transactions.Transaction
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Transactions.UtxoInput
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Transactions.UtxoInput
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Transactions.UtxoInput
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Transactions.UtxoInput
instance GHC.Show.Show Blockfrost.Types.Cardano.Transactions.UtxoInput
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Transactions.UtxoOutput
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Transactions.UtxoOutput
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Transactions.UtxoOutput
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Transactions.UtxoOutput
instance GHC.Show.Show Blockfrost.Types.Cardano.Transactions.UtxoOutput
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Transactions.TransactionUtxos
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Transactions.TransactionUtxos
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Transactions.TransactionUtxos
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Transactions.TransactionUtxos
instance GHC.Show.Show Blockfrost.Types.Cardano.Transactions.TransactionUtxos
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Transactions.ValidationPurpose
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Transactions.ValidationPurpose
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Transactions.ValidationPurpose
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Transactions.ValidationPurpose
instance GHC.Show.Show Blockfrost.Types.Cardano.Transactions.ValidationPurpose
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Transactions.TransactionRedeemer
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Transactions.TransactionRedeemer
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Transactions.TransactionRedeemer
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Transactions.TransactionRedeemer
instance GHC.Show.Show Blockfrost.Types.Cardano.Transactions.TransactionRedeemer
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Transactions.TransactionStake
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Transactions.TransactionStake
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Transactions.TransactionStake
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Transactions.TransactionStake
instance GHC.Show.Show Blockfrost.Types.Cardano.Transactions.TransactionStake
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Transactions.TransactionDelegation
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Transactions.TransactionDelegation
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Transactions.TransactionDelegation
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Transactions.TransactionDelegation
instance GHC.Show.Show Blockfrost.Types.Cardano.Transactions.TransactionDelegation
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Transactions.TransactionWithdrawal
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Transactions.TransactionWithdrawal
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Transactions.TransactionWithdrawal
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Transactions.TransactionWithdrawal
instance GHC.Show.Show Blockfrost.Types.Cardano.Transactions.TransactionWithdrawal
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Transactions.Pot
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Transactions.Pot
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Transactions.Pot
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Transactions.Pot
instance GHC.Show.Show Blockfrost.Types.Cardano.Transactions.Pot
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Transactions.TransactionMir
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Transactions.TransactionMir
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Transactions.TransactionMir
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Transactions.TransactionMir
instance GHC.Show.Show Blockfrost.Types.Cardano.Transactions.TransactionMir
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Transactions.TransactionPoolRetiring
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Transactions.TransactionPoolRetiring
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Transactions.TransactionPoolRetiring
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Transactions.TransactionPoolRetiring
instance GHC.Show.Show Blockfrost.Types.Cardano.Transactions.TransactionPoolRetiring
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Transactions.TransactionMetaJSON
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Transactions.TransactionMetaJSON
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Transactions.TransactionMetaJSON
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Transactions.TransactionMetaJSON
instance GHC.Show.Show Blockfrost.Types.Cardano.Transactions.TransactionMetaJSON
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Transactions.TransactionMetaCBOR
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Transactions.TransactionMetaCBOR
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Transactions.TransactionMetaCBOR
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Transactions.TransactionMetaCBOR
instance GHC.Show.Show Blockfrost.Types.Cardano.Transactions.TransactionMetaCBOR
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Transactions.PoolUpdateMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Transactions.PoolUpdateMetadata
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Transactions.PoolUpdateMetadata
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Transactions.PoolUpdateMetadata
instance GHC.Show.Show Blockfrost.Types.Cardano.Transactions.PoolUpdateMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Transactions.TransactionPoolUpdate
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Transactions.TransactionPoolUpdate
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Transactions.TransactionPoolUpdate
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Transactions.TransactionPoolUpdate
instance GHC.Show.Show Blockfrost.Types.Cardano.Transactions.TransactionPoolUpdate
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Transactions.TransactionPoolUpdate
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Transactions.PoolUpdateMetadata
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Transactions.TransactionMetaCBOR
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Transactions.TransactionMetaJSON
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Transactions.TransactionPoolRetiring
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Transactions.TransactionMir
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Transactions.Pot
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Transactions.TransactionWithdrawal
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Transactions.TransactionDelegation
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Transactions.TransactionStake
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Transactions.TransactionRedeemer
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Transactions.ValidationPurpose
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Transactions.TransactionUtxos
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Transactions.UtxoOutput
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Transactions.UtxoInput
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Transactions.Transaction


-- | Cardano Scripts responses
module Blockfrost.Types.Cardano.Scripts

-- | Script info
data Script
Script :: ScriptHash -> ScriptType -> Maybe Integer -> Script

-- | Hash of the script
[_scriptScriptHash] :: Script -> ScriptHash

-- | Type of the script language
[_scriptType] :: Script -> ScriptType

-- | The size of the CBOR serialised script, if a Plutus script
[_scriptSerialisedSize] :: Script -> Maybe Integer

-- | Script type
data ScriptType
Plutus :: ScriptType
Timelock :: ScriptType

-- | Script redeemer
data ScriptRedeemer
ScriptRedeemer :: TxHash -> Integer -> ValidationPurpose -> Text -> Quantity -> Quantity -> Lovelaces -> ScriptRedeemer

-- | Hash of the transaction
[_scriptRedeemerTxHash] :: ScriptRedeemer -> TxHash

-- | Index of the redeemer within a transaction
[_scriptRedeemerTxIndex] :: ScriptRedeemer -> Integer

-- | Validation purpose
[_scriptRedeemerPurpose] :: ScriptRedeemer -> ValidationPurpose

-- | Datum hash
[_scriptRedeemerDatumHash] :: ScriptRedeemer -> Text

-- | The budget in Memory to run a script
[_scriptRedeemerUnitMem] :: ScriptRedeemer -> Quantity

-- | The budget in Steps to run a script
[_scriptRedeemerUnitSteps] :: ScriptRedeemer -> Quantity

-- | The fee consumed to run the script
[_scriptRedeemerFee] :: ScriptRedeemer -> Lovelaces
newtype ScriptDatum
ScriptDatum :: Value -> ScriptDatum
[_scriptDatumJsonValue] :: ScriptDatum -> Value
newtype ScriptJSON
ScriptJSON :: Maybe Value -> ScriptJSON
[_scriptJsonJson] :: ScriptJSON -> Maybe Value
newtype ScriptCBOR
ScriptCBOR :: Maybe Text -> ScriptCBOR
[_scriptCborCbor] :: ScriptCBOR -> Maybe Text
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Scripts.ScriptType
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Scripts.ScriptType
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Scripts.ScriptType
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Scripts.ScriptType
instance GHC.Show.Show Blockfrost.Types.Cardano.Scripts.ScriptType
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Scripts.Script
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Scripts.Script
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Scripts.Script
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Scripts.Script
instance GHC.Show.Show Blockfrost.Types.Cardano.Scripts.Script
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Scripts.ScriptRedeemer
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Scripts.ScriptRedeemer
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Scripts.ScriptRedeemer
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Scripts.ScriptRedeemer
instance GHC.Show.Show Blockfrost.Types.Cardano.Scripts.ScriptRedeemer
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Scripts.ScriptDatum
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Scripts.ScriptDatum
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Scripts.ScriptDatum
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Scripts.ScriptDatum
instance GHC.Show.Show Blockfrost.Types.Cardano.Scripts.ScriptDatum
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Scripts.ScriptJSON
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Scripts.ScriptJSON
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Scripts.ScriptJSON
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Scripts.ScriptJSON
instance GHC.Show.Show Blockfrost.Types.Cardano.Scripts.ScriptJSON
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Scripts.ScriptCBOR
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Scripts.ScriptCBOR
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Scripts.ScriptCBOR
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Scripts.ScriptCBOR
instance GHC.Show.Show Blockfrost.Types.Cardano.Scripts.ScriptCBOR
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Scripts.ScriptCBOR
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Scripts.ScriptJSON
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Scripts.ScriptDatum
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Scripts.ScriptRedeemer
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Scripts.Script
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Scripts.ScriptType


-- | Cardano Network reponses
module Blockfrost.Types.Cardano.Network

-- | Detailed network information
data Network
Network :: NetworkSupply -> NetworkStake -> Network

-- | Supply data
[_networkSupply] :: Network -> NetworkSupply

-- | Stake data
[_networkStake] :: Network -> NetworkStake

-- | Live and active stake of the whole network
data NetworkStake
NetworkStake :: Lovelaces -> Lovelaces -> NetworkStake

-- | Current live stake in Lovelaces
[_stakeLive] :: NetworkStake -> Lovelaces

-- | Current active stake in Lovelaces
[_stakeActive] :: NetworkStake -> Lovelaces

-- | Lovelace supply data
data NetworkSupply
NetworkSupply :: Lovelaces -> Lovelaces -> Lovelaces -> Lovelaces -> Lovelaces -> Lovelaces -> NetworkSupply

-- | Maximum supply in Lovelaces
[_supplyMax] :: NetworkSupply -> Lovelaces

-- | Current total (max supply - reserves) supply in Lovelaces
[_supplyTotal] :: NetworkSupply -> Lovelaces

-- | Current circulating (UTXOs + withdrawables) supply in Lovelaces
[_supplyCirculating] :: NetworkSupply -> Lovelaces

-- | Current supply locked by scripts in Lovelaces
[_supplyLocked] :: NetworkSupply -> Lovelaces

-- | Current supply locked in treasury
[_supplyTreasury] :: NetworkSupply -> Lovelaces

-- | Current supply locked in reserves
[_supplyReserves] :: NetworkSupply -> Lovelaces
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Network.NetworkSupply
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Network.NetworkSupply
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Network.NetworkSupply
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Network.NetworkSupply
instance GHC.Show.Show Blockfrost.Types.Cardano.Network.NetworkSupply
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Network.NetworkStake
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Network.NetworkStake
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Network.NetworkStake
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Network.NetworkStake
instance GHC.Show.Show Blockfrost.Types.Cardano.Network.NetworkStake
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Network.Network
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Network.Network
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Network.Network
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Network.Network
instance GHC.Show.Show Blockfrost.Types.Cardano.Network.Network
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Network.Network
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Network.NetworkStake
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Network.NetworkSupply


-- | Transaction metadata
module Blockfrost.Types.Cardano.Metadata

-- | Transaction metadata label in use
data TxMeta
TxMeta :: Text -> Maybe Text -> Quantity -> TxMeta

-- | Metadata label
[_txMetaLabel] :: TxMeta -> Text

-- | CIP10 defined description
[_txMetaCip10] :: TxMeta -> Maybe Text

-- | The count of metadata entries with a specific label
[_txMetaCount] :: TxMeta -> Quantity

-- | Transaction metadata content in JSON
data TxMetaJSON
TxMetaJSON :: TxHash -> Maybe Value -> TxMetaJSON

-- | Transaction hash that contains the specific metadata
[_txMetaJSONTxHash] :: TxMetaJSON -> TxHash

-- | Content of the JSON metadata
[_txMetaJSONJSONMetadata] :: TxMetaJSON -> Maybe Value

-- | Transaction metadata content in CBOR
data TxMetaCBOR
TxMetaCBOR :: TxHash -> Maybe Text -> TxMetaCBOR

-- | Transaction hash that contains the specific metadata
[_txMetaCBORTxHash] :: TxMetaCBOR -> TxHash

-- | Content of the CBOR metadata
[_txMetaCBORMetadata] :: TxMetaCBOR -> Maybe Text
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Metadata.TxMeta
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Metadata.TxMeta
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Metadata.TxMeta
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Metadata.TxMeta
instance GHC.Show.Show Blockfrost.Types.Cardano.Metadata.TxMeta
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Metadata.TxMetaJSON
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Metadata.TxMetaJSON
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Metadata.TxMetaJSON
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Metadata.TxMetaJSON
instance GHC.Show.Show Blockfrost.Types.Cardano.Metadata.TxMetaJSON
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Metadata.TxMetaCBOR
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Metadata.TxMetaCBOR
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Metadata.TxMetaCBOR
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Metadata.TxMetaCBOR
instance GHC.Show.Show Blockfrost.Types.Cardano.Metadata.TxMetaCBOR
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Metadata.TxMetaCBOR
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Metadata.TxMetaJSON
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Metadata.TxMeta


-- | Blockchain genesis
module Blockfrost.Types.Cardano.Genesis

-- | Information about blockchain genesis
data Genesis
Genesis :: Double -> Integer -> Lovelaces -> Integer -> Integer -> POSIXTime -> Integer -> Integer -> Integer -> Integer -> Genesis

-- | The proportion of slots in which blocks should be issued
[_genesisActiveSlotsCoefficient] :: Genesis -> Double

-- | Determines the quorum needed for votes on the protocol parameter
--   updates
[_genesisUpdateQuorum] :: Genesis -> Integer

-- | The total number of lovelace in the system
[_genesisMaxLovelaceSupply] :: Genesis -> Lovelaces

-- | Network identifier
[_genesisNetworkMagic] :: Genesis -> Integer

-- | Number of slots in an epoch
[_genesisEpochLength] :: Genesis -> Integer

-- | Time of slot 0 in UNIX time
[_genesisSystemStart] :: Genesis -> POSIXTime

-- | Number of slots in an KES period
[_genesisSlotsPerKesPeriod] :: Genesis -> Integer

-- | Duration of one slot in seconds
[_genesisSlotLength] :: Genesis -> Integer

-- | The maximum number of time a KES key can be evolved before a pool
--   operator must create a new operational certificate
[_genesisMaxKesEvolutions] :: Genesis -> Integer

-- | Security parameter <tt>k</tt>
[_genesisSecurityParam] :: Genesis -> Integer
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Genesis.Genesis
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Genesis.Genesis
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Genesis.Genesis
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Genesis.Genesis
instance GHC.Show.Show Blockfrost.Types.Cardano.Genesis.Genesis
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Genesis.Genesis


-- | Responses for Cardano epoch quries
module Blockfrost.Types.Cardano.Epochs

-- | Information about an epoch
data EpochInfo
EpochInfo :: Epoch -> POSIXTime -> POSIXTime -> POSIXTime -> POSIXTime -> Integer -> Integer -> Lovelaces -> Lovelaces -> Maybe Lovelaces -> EpochInfo

-- | Epoch number
[_epochInfoEpoch] :: EpochInfo -> Epoch

-- | Unix time of the start of the epoch
[_epochInfoStartTime] :: EpochInfo -> POSIXTime

-- | Unix time of the end of the epoch
[_epochInfoEndTime] :: EpochInfo -> POSIXTime

-- | Unix time of the first block of the epoch
[_epochInfoFirstBlockTime] :: EpochInfo -> POSIXTime

-- | Unix time of the last block of the epoch
[_epochInfoLastBlockTime] :: EpochInfo -> POSIXTime

-- | Number of blocks within the epoch
[_epochInfoBlockCount] :: EpochInfo -> Integer

-- | Number of transactions within the epoch
[_epochInfoTxCount] :: EpochInfo -> Integer

-- | Sum of all the transactions within the epoch in Lovelaces
[_epochInfoOutput] :: EpochInfo -> Lovelaces

-- | Sum of all the fees within the epoch in Lovelaces
[_epochInfoFees] :: EpochInfo -> Lovelaces

-- | Sum of all the active stakes within the epoch in Lovelaces
[_epochInfoActiveStake] :: EpochInfo -> Maybe Lovelaces

-- | Stake distribution for an epoch for specific pool
data PoolStakeDistribution
PoolStakeDistribution :: Address -> Lovelaces -> PoolStakeDistribution

-- | Stake address
[_poolStakeDistributionStakeAddress] :: PoolStakeDistribution -> Address

-- | Amount of active delegated stake in Lovelaces
[_poolStakeDistributionAmount] :: PoolStakeDistribution -> Lovelaces

-- | Protocol parameters
data ProtocolParams
ProtocolParams :: Epoch -> Integer -> Integer -> Integer -> Integer -> Integer -> Lovelaces -> Lovelaces -> Integer -> Integer -> Double -> Double -> Double -> Double -> Maybe Value -> Integer -> Integer -> Lovelaces -> Lovelaces -> Text -> Double -> Double -> Quantity -> Quantity -> Quantity -> Quantity -> Quantity -> Integer -> Integer -> Lovelaces -> ProtocolParams

-- | Epoch number
[_protocolParamsEpoch] :: ProtocolParams -> Epoch

-- | The linear factor for the minimum fee calculation for given epoch
[_protocolParamsMinFeeA] :: ProtocolParams -> Integer

-- | The constant factor for the minimum fee calculation
[_protocolParamsMinFeeB] :: ProtocolParams -> Integer

-- | Maximum block body size in Bytes
[_protocolParamsMaxBlockSize] :: ProtocolParams -> Integer

-- | Maximum transaction size
[_protocolParamsMaxTxSize] :: ProtocolParams -> Integer

-- | Maximum block header size
[_protocolParamsMaxBlockHeaderSize] :: ProtocolParams -> Integer

-- | The amount of a key registration deposit in Lovelaces
[_protocolParamsKeyDeposit] :: ProtocolParams -> Lovelaces

-- | The amount of a pool registration deposit in Lovelaces
[_protocolParamsPoolDeposit] :: ProtocolParams -> Lovelaces

-- | Epoch bound on pool retirement
[_protocolParamsEMax] :: ProtocolParams -> Integer

-- | Desired number of pools
[_protocolParamsNOpt] :: ProtocolParams -> Integer

-- | Pool pledge influence
[_protocolParamsA0] :: ProtocolParams -> Double

-- | Monetary expansion
[_protocolParamsRho] :: ProtocolParams -> Double

-- | Treasury expansion
[_protocolParamsTau] :: ProtocolParams -> Double

-- | Percentage of blocks produced by federated nodes
[_protocolParamsDecentralisationParam] :: ProtocolParams -> Double

-- | Seed for extra entropy
[_protocolParamsExtraEntropy] :: ProtocolParams -> Maybe Value

-- | Accepted protocol major version
[_protocolParamsProtocolMajorVer] :: ProtocolParams -> Integer

-- | Accepted protocol minor version
[_protocolParamsProtocolMinorVer] :: ProtocolParams -> Integer

-- | Minimum UTXO value
[_protocolParamsMinUtxo] :: ProtocolParams -> Lovelaces

-- | Minimum stake cost forced on the pool
[_protocolParamsMinPoolCost] :: ProtocolParams -> Lovelaces

-- | Epoch number only used once cost models
--   <a>https://github.com/input-output-hk/cardano-db-sync/pull/758</a>
[_protocolParamsNonce] :: ProtocolParams -> Text

-- | The per word cost of script memory usage
[_protocolParamsPriceMem] :: ProtocolParams -> Double

-- | The cost of script execution step usage
[_protocolParamsPriceStep] :: ProtocolParams -> Double

-- | The maximum number of execution memory allowed to be used in a single
--   transaction
[_protocolParamsMaxTxExMem] :: ProtocolParams -> Quantity

-- | The maximum number of execution steps allowed to be used in a single
--   transaction
[_protocolParamsMaxTxExSteps] :: ProtocolParams -> Quantity

-- | The maximum number of execution memory allowed to be used in a single
--   block
[_protocolParamsMaxBlockExMem] :: ProtocolParams -> Quantity

-- | The maximum number of execution steps allowed to be used in a single
--   block
[_protocolParamsMaxBlockExSteps] :: ProtocolParams -> Quantity

-- | The maximum Val size
[_protocolParamsMaxValSize] :: ProtocolParams -> Quantity

-- | The percentage of the transactions fee which must be provided as
--   collateral when including non-native scripts
[_protocolParamsCollateralPercent] :: ProtocolParams -> Integer

-- | The maximum number of collateral inputs allowed in a transaction
[_protocolParamsMaxCollateralInputs] :: ProtocolParams -> Integer

-- | The cost per UTxO word
[_protocolParamsCoinsPerUtxoWord] :: ProtocolParams -> Lovelaces

-- | Active stake distribution for an epoch
data StakeDistribution
StakeDistribution :: Address -> PoolId -> Lovelaces -> StakeDistribution

-- | Stake address
[_stakeDistributionStakeAddress] :: StakeDistribution -> Address

-- | Bech32 prefix of the pool delegated to
[_stakeDistributionPoolId] :: StakeDistribution -> PoolId

-- | Amount of active delegated stake in Lovelaces
[_stakeDistributionAmount] :: StakeDistribution -> Lovelaces
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Epochs.EpochInfo
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Epochs.EpochInfo
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Epochs.EpochInfo
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Epochs.EpochInfo
instance GHC.Show.Show Blockfrost.Types.Cardano.Epochs.EpochInfo
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Epochs.ProtocolParams
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Epochs.ProtocolParams
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Epochs.ProtocolParams
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Epochs.ProtocolParams
instance GHC.Show.Show Blockfrost.Types.Cardano.Epochs.ProtocolParams
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Epochs.StakeDistribution
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Epochs.StakeDistribution
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Epochs.StakeDistribution
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Epochs.StakeDistribution
instance GHC.Show.Show Blockfrost.Types.Cardano.Epochs.StakeDistribution
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Epochs.PoolStakeDistribution
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Epochs.PoolStakeDistribution
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Epochs.PoolStakeDistribution
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Epochs.PoolStakeDistribution
instance GHC.Show.Show Blockfrost.Types.Cardano.Epochs.PoolStakeDistribution
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Epochs.PoolStakeDistribution
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Epochs.StakeDistribution
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Epochs.ProtocolParams
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Epochs.EpochInfo


-- | Information about produced blocks
module Blockfrost.Types.Cardano.Blocks

-- | Information about a block
data Block
Block :: POSIXTime -> Maybe Integer -> BlockHash -> Maybe Slot -> Maybe Epoch -> Maybe Integer -> Text -> Integer -> Integer -> Maybe Lovelaces -> Maybe Lovelaces -> Maybe Text -> Maybe BlockHash -> Maybe BlockHash -> Integer -> Block

-- | Block creation time in UNIX time
[_blockTime] :: Block -> POSIXTime

-- | Block number
[_blockHeight] :: Block -> Maybe Integer

-- | Hash of the block
[_blockHash] :: Block -> BlockHash

-- | Slot number
[_blockSlot] :: Block -> Maybe Slot

-- | Epoch number
[_blockEpoch] :: Block -> Maybe Epoch

-- | Slot within the epoch
[_blockEpochSlot] :: Block -> Maybe Integer

-- | Bech32 ID of the slot leader or specific block description in case
--   there is no slot leader
[_blockSlotLeader] :: Block -> Text

-- | Block size in Bytes
[_blockSize] :: Block -> Integer

-- | Number of transactions in the block
[_blockTxCount] :: Block -> Integer

-- | Total output within the block in Lovelaces
[_blockOutput] :: Block -> Maybe Lovelaces

-- | Total fees within the block in Lovelaces
[_blockFees] :: Block -> Maybe Lovelaces

-- | VRF key of the block
[_blockBlockVrf] :: Block -> Maybe Text

-- | Hash of the previous block
[_blockPreviousBlock] :: Block -> Maybe BlockHash

-- | Hash of the next block
[_blockNextBlock] :: Block -> Maybe BlockHash

-- | Number of block confirmations
[_blockConfirmations] :: Block -> Integer
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Blocks.Block
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Blocks.Block
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Blocks.Block
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Blocks.Block
instance GHC.Show.Show Blockfrost.Types.Cardano.Blocks.Block
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Blocks.Block
instance Data.Aeson.Types.ToJSON.ToJSON (Blockfrost.Types.Shared.Address.Address, [Blockfrost.Types.Shared.TxHash.TxHash])
instance Data.Aeson.Types.FromJSON.FromJSON (Blockfrost.Types.Shared.Address.Address, [Blockfrost.Types.Shared.TxHash.TxHash])


-- | Responses for Cardano asset queries
module Blockfrost.Types.Cardano.Assets

-- | Asset information, result of listing assets
data AssetInfo
AssetInfo :: Text -> Quantity -> AssetInfo
[_assetInfoAsset] :: AssetInfo -> Text
[_assetInfoQuantity] :: AssetInfo -> Quantity

-- | Details of an asset
data AssetDetails
AssetDetails :: Text -> PolicyId -> Maybe Text -> Text -> Quantity -> TxHash -> Integer -> Maybe AssetOnChainMetadata -> Maybe AssetMetadata -> AssetDetails

-- | Hex-encoded asset full name
[_assetDetailsAsset] :: AssetDetails -> Text

-- | Policy ID of the asset
[_assetDetailsPolicyId] :: AssetDetails -> PolicyId

-- | Hex-encoded asset name of the asset
[_assetDetailsAssetName] :: AssetDetails -> Maybe Text

-- | CIP14 based user-facing fingerprint
[_assetDetailsFingerprint] :: AssetDetails -> Text

-- | Current asset quantity
[_assetDetailsQuantity] :: AssetDetails -> Quantity

-- | ID of the initial minting transaction
[_assetDetailsInitialMintTxHash] :: AssetDetails -> TxHash

-- | Count of mint and burn transactions
[_assetDetailsMintOrBurnCount] :: AssetDetails -> Integer

-- | On-chain metadata stored in the minting transaction under label 721,
--   community discussion around the standard ongoing at
--   <a>https://github.com/cardano-foundation/CIPs/pull/85</a>
[_assetDetailsOnchainMetadata] :: AssetDetails -> Maybe AssetOnChainMetadata
[_assetDetailsMetadata] :: AssetDetails -> Maybe AssetMetadata

-- | On-chain metadata stored in the minting transaction under label 721,
--   community discussion around the standard ongoing at
--   <a>https://github.com/cardano-foundation/CIPs/pull/85</a>
data AssetOnChainMetadata
AssetOnChainMetadata :: Text -> Text -> AssetOnChainMetadata

-- | Name of the asset
[_assetOnChainMetadataName] :: AssetOnChainMetadata -> Text

-- | URI of the associated asset TODO: in schema has `additionalProperties:
--   true` so it can carry more arbitrary properties, keep as Value?
[_assetOnChainMetadataImage] :: AssetOnChainMetadata -> Text

-- | Asset metadata obtained from Cardano token registry
--   <a>https://github.com/cardano-foundation/cardano-token-registry</a>
data AssetMetadata
AssetMetadata :: Text -> Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> AssetMetadata

-- | Asset name
[_assetMetadataName] :: AssetMetadata -> Text

-- | Asset description
[_assetMetadataDescription] :: AssetMetadata -> Text
[_assetMetadataTicker] :: AssetMetadata -> Maybe Text

-- | Asset website
[_assetMetadataUrl] :: AssetMetadata -> Maybe Text

-- | Base64 encoded logo of the asset
[_assetMetadataLogo] :: AssetMetadata -> Maybe Text

-- | Number of decimal places of the asset unit
[_assetMetadataDecimals] :: AssetMetadata -> Maybe Int

-- | History of an asset
data AssetHistory
AssetHistory :: TxHash -> Quantity -> AssetAction -> AssetHistory

-- | Hash of the transaction containing the asset action
[_assetHistoryTxHash] :: AssetHistory -> TxHash

-- | Asset amount of the specific action
[_assetHistoryAmount] :: AssetHistory -> Quantity

-- | Action executed upon the asset policy
[_assetHistoryAction] :: AssetHistory -> AssetAction

-- | Action of the asset. Created (<a>Minted</a>) or destroyed
--   (<a>Burned</a>).
data AssetAction
Minted :: AssetAction
Burned :: AssetAction

-- | Transaction of an asset
data AssetTransaction
AssetTransaction :: TxHash -> Integer -> Integer -> AssetTransaction

-- | Hash of the transaction
[_assetTransactionTxHash] :: AssetTransaction -> TxHash

-- | Transaction index within the block
[_assetTransactionTxIndex] :: AssetTransaction -> Integer

-- | Block height
[_assetTransactionBlockHeight] :: AssetTransaction -> Integer

-- | An address containing specific asset
data AssetAddress
AssetAddress :: Address -> Quantity -> AssetAddress

-- | Address containing the specific asset
[_assetAddressAddress] :: AssetAddress -> Address

-- | Asset quantity on the specific address
[_assetAddressQuantity] :: AssetAddress -> Quantity
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Assets.AssetInfo
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Assets.AssetInfo
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Assets.AssetInfo
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Assets.AssetInfo
instance GHC.Show.Show Blockfrost.Types.Cardano.Assets.AssetInfo
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Assets.AssetOnChainMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Assets.AssetOnChainMetadata
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Assets.AssetOnChainMetadata
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Assets.AssetOnChainMetadata
instance GHC.Show.Show Blockfrost.Types.Cardano.Assets.AssetOnChainMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Assets.AssetMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Assets.AssetMetadata
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Assets.AssetMetadata
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Assets.AssetMetadata
instance GHC.Show.Show Blockfrost.Types.Cardano.Assets.AssetMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Assets.AssetDetails
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Assets.AssetDetails
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Assets.AssetDetails
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Assets.AssetDetails
instance GHC.Show.Show Blockfrost.Types.Cardano.Assets.AssetDetails
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Assets.AssetAction
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Assets.AssetAction
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Assets.AssetAction
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Assets.AssetAction
instance GHC.Show.Show Blockfrost.Types.Cardano.Assets.AssetAction
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Assets.AssetHistory
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Assets.AssetHistory
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Assets.AssetHistory
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Assets.AssetHistory
instance GHC.Show.Show Blockfrost.Types.Cardano.Assets.AssetHistory
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Assets.AssetTransaction
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Assets.AssetTransaction
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Assets.AssetTransaction
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Assets.AssetTransaction
instance GHC.Show.Show Blockfrost.Types.Cardano.Assets.AssetTransaction
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Assets.AssetAddress
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Assets.AssetAddress
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Assets.AssetAddress
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Assets.AssetAddress
instance GHC.Show.Show Blockfrost.Types.Cardano.Assets.AssetAddress
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Assets.AssetAddress
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Assets.AssetTransaction
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Assets.AssetHistory
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Assets.AssetAction
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Assets.AssetDetails
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Assets.AssetMetadata
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Assets.AssetOnChainMetadata
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Assets.AssetInfo


-- | Responses for Cardano address queries
module Blockfrost.Types.Cardano.Addresses

-- | Information about Cardano address
data AddressInfo
AddressInfo :: Address -> [Amount] -> Maybe Address -> AddressType -> Bool -> AddressInfo

-- | Bech32 encoded addresses
[_addressInfoAddress] :: AddressInfo -> Address

-- | Lovelaces or tokens stored on this address
[_addressInfoAmount] :: AddressInfo -> [Amount]

-- | Stake address that controls the key
[_addressInfoStakeAddress] :: AddressInfo -> Maybe Address

-- | Address era
[_addressInfoType] :: AddressInfo -> AddressType

-- | True if this is a script address
[_addressInfoScript] :: AddressInfo -> Bool

-- | Type (era) of an address
data AddressType
Byron :: AddressType
Shelley :: AddressType

-- | Details about Cardano address
data AddressDetails
AddressDetails :: Address -> [Amount] -> [Amount] -> Integer -> AddressDetails

-- | Bech32 encoded address
[_addressDetailsAddress] :: AddressDetails -> Address

-- | Total Lovelaces or tokens received by this address
[_addressDetailsReceivedSum] :: AddressDetails -> [Amount]

-- | Total Lovelaces or tokens sent by this address
[_addressDetailsSentSum] :: AddressDetails -> [Amount]

-- | Count of all transactions on the address
[_addressDetailsTxCount] :: AddressDetails -> Integer

-- | UTxOs of the address
data AddressUtxo
AddressUtxo :: TxHash -> Integer -> [Amount] -> BlockHash -> Maybe Text -> AddressUtxo

-- | Transaction hash of the UTXO
[_addressUtxoTxHash] :: AddressUtxo -> TxHash

-- | UTXO index in the transaction
[_addressUtxoOutputIndex] :: AddressUtxo -> Integer

-- | Amounts of Lovelaces or tokens
[_addressUtxoAmount] :: AddressUtxo -> [Amount]

-- | Block hash of the UTXO
[_addressUtxoBlock] :: AddressUtxo -> BlockHash

-- | Block hash of the UTXO
[_addressUtxoDataHash] :: AddressUtxo -> Maybe Text

-- | Transactions on the address
data AddressTransaction
AddressTransaction :: TxHash -> Integer -> Integer -> POSIXTime -> AddressTransaction

-- | Hash of the transaction
[_addressTransactionTxHash] :: AddressTransaction -> TxHash

-- | Transaction index within the block
[_addressTransactionTxIndex] :: AddressTransaction -> Integer

-- | Block height
[_addressTransactionBlockHeight] :: AddressTransaction -> Integer

-- | Block creation time in UNIX time
[_addressTransactionBlockTime] :: AddressTransaction -> POSIXTime
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Addresses.AddressType
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Addresses.AddressType
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Addresses.AddressType
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Addresses.AddressType
instance GHC.Show.Show Blockfrost.Types.Cardano.Addresses.AddressType
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Addresses.AddressInfo
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Addresses.AddressInfo
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Addresses.AddressInfo
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Addresses.AddressInfo
instance GHC.Show.Show Blockfrost.Types.Cardano.Addresses.AddressInfo
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Addresses.AddressDetails
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Addresses.AddressDetails
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Addresses.AddressDetails
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Addresses.AddressDetails
instance GHC.Show.Show Blockfrost.Types.Cardano.Addresses.AddressDetails
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Addresses.AddressUtxo
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Addresses.AddressUtxo
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Addresses.AddressUtxo
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Addresses.AddressUtxo
instance GHC.Show.Show Blockfrost.Types.Cardano.Addresses.AddressUtxo
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Addresses.AddressTransaction
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Addresses.AddressTransaction
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Addresses.AddressTransaction
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Addresses.AddressTransaction
instance GHC.Show.Show Blockfrost.Types.Cardano.Addresses.AddressTransaction
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Addresses.AddressTransaction
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Addresses.AddressUtxo
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Addresses.AddressDetails
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Addresses.AddressInfo
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Addresses.AddressType


-- | Responses for Cardano accounts queries
module Blockfrost.Types.Cardano.Accounts

-- | Information about an account, identified by its stake address
data AccountInfo
AccountInfo :: Address -> Bool -> Maybe Integer -> Lovelaces -> Lovelaces -> Lovelaces -> Lovelaces -> Lovelaces -> Lovelaces -> Maybe PoolId -> AccountInfo

-- | Bech32 stake address
[_accountInfoStakeAddress] :: AccountInfo -> Address

-- | Registration state of an account
[_accountInfoActive] :: AccountInfo -> Bool

-- | Epoch of the most recent action - registration or deregistration
[_accountInfoActiveEpoch] :: AccountInfo -> Maybe Integer

-- | Balance of the account in Lovelaces
[_accountInfoControlledAmount] :: AccountInfo -> Lovelaces

-- | Sum of all funds rewards for the account in the Lovelaces
[_accountInfoRewardsSum] :: AccountInfo -> Lovelaces

-- | Sum of all the withdrawals for the account in the Lovelaces
[_accountInfoWithdrawalsSum] :: AccountInfo -> Lovelaces

-- | Sum of all funds from reserves for the account in the Lovelaces
[_accountInfoReservesSum] :: AccountInfo -> Lovelaces

-- | Sum of all funds from treasury for the account in the Lovelaces
[_accountInfoTreasurySum] :: AccountInfo -> Lovelaces

-- | Sum of available rewards that haven't been withdrawn yet for the
--   account in the Lovelaces
[_accountInfoWithdrawableAmount] :: AccountInfo -> Lovelaces

-- | Bech32 pool ID that owns the account
[_accountInfoPoolId] :: AccountInfo -> Maybe PoolId

-- | Reward received by an account
data AccountReward
AccountReward :: Epoch -> Lovelaces -> PoolId -> AccountReward

-- | Epoch of the associated reward
[_accountRewardEpoch] :: AccountReward -> Epoch

-- | Rewards for given epoch in Lovelaces
[_accountRewardAmount] :: AccountReward -> Lovelaces

-- | Bech32 pool ID being delegated to
[_accountRewardPoolId] :: AccountReward -> PoolId

-- | History of accounts stake delegation
data AccountHistory
AccountHistory :: Integer -> Lovelaces -> PoolId -> AccountHistory

-- | Epoch in which the stake was active
[_accountHistoryActiveEpoch] :: AccountHistory -> Integer

-- | Stake amount in Lovelaces
[_accountHistoryAmount] :: AccountHistory -> Lovelaces

-- | Bech32 ID of pool being delegated to
[_accountHistoryPoolId] :: AccountHistory -> PoolId

-- | Account delegations and associated transaction IDs
data AccountDelegation
AccountDelegation :: Epoch -> TxHash -> Lovelaces -> PoolId -> AccountDelegation

-- | Epoch in which the delegation becomes active
[_accountDelegationActiveEpoch] :: AccountDelegation -> Epoch

-- | Hash of the transaction containing the delegation
[_accountDelegationTxHash] :: AccountDelegation -> TxHash

-- | Rewards for given epoch in Lovelaces
[_accountDelegationAmount] :: AccountDelegation -> Lovelaces

-- | Bech32 ID of pool being delegated to
[_accountDelegationPoolId] :: AccountDelegation -> PoolId

-- | Account (de)registration
data AccountRegistration
AccountRegistration :: AccountRegistrationAction -> TxHash -> AccountRegistration

-- | Action in the certificate
[_accountRegistrationAction] :: AccountRegistration -> AccountRegistrationAction

-- | Hash of the transaction containing the (de)registration certificate
[_accountRegistrationTxHash] :: AccountRegistration -> TxHash

-- | Registration action
data AccountRegistrationAction
Registered :: AccountRegistrationAction
Deregistered :: AccountRegistrationAction

-- | Withdrawal from an account
data AccountWithdrawal
AccountWithdrawal :: Lovelaces -> TxHash -> AccountWithdrawal

-- | Withdrawal amount in Lovelaces
[_accountWithdrawalAmount] :: AccountWithdrawal -> Lovelaces

-- | Hash of the transaction containing the withdrawal
[_accountWithdrawalTxHash] :: AccountWithdrawal -> TxHash

-- | Account MIR (Move Instantaneous Reward)
data AccountMir
AccountMir :: Lovelaces -> TxHash -> AccountMir

-- | MIR amount in Lovelaces
[_accountMirAmount] :: AccountMir -> Lovelaces

-- | Hash of the transaction containing the MIR
[_accountMirTxHash] :: AccountMir -> TxHash

-- | Address associated with an account address
newtype AddressAssociated
AddressAssociated :: Address -> AddressAssociated
[_addressAssociatedAddress] :: AddressAssociated -> Address
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Accounts.AccountInfo
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Accounts.AccountInfo
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Accounts.AccountInfo
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Accounts.AccountInfo
instance GHC.Show.Show Blockfrost.Types.Cardano.Accounts.AccountInfo
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Accounts.AccountReward
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Accounts.AccountReward
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Accounts.AccountReward
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Accounts.AccountReward
instance GHC.Show.Show Blockfrost.Types.Cardano.Accounts.AccountReward
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Accounts.AccountHistory
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Accounts.AccountHistory
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Accounts.AccountHistory
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Accounts.AccountHistory
instance GHC.Show.Show Blockfrost.Types.Cardano.Accounts.AccountHistory
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Accounts.AccountDelegation
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Accounts.AccountDelegation
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Accounts.AccountDelegation
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Accounts.AccountDelegation
instance GHC.Show.Show Blockfrost.Types.Cardano.Accounts.AccountDelegation
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Accounts.AccountRegistrationAction
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Accounts.AccountRegistrationAction
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Accounts.AccountRegistrationAction
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Accounts.AccountRegistrationAction
instance GHC.Show.Show Blockfrost.Types.Cardano.Accounts.AccountRegistrationAction
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Accounts.AccountRegistration
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Accounts.AccountRegistration
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Accounts.AccountRegistration
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Accounts.AccountRegistration
instance GHC.Show.Show Blockfrost.Types.Cardano.Accounts.AccountRegistration
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Accounts.AccountWithdrawal
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Accounts.AccountWithdrawal
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Accounts.AccountWithdrawal
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Accounts.AccountWithdrawal
instance GHC.Show.Show Blockfrost.Types.Cardano.Accounts.AccountWithdrawal
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Accounts.AccountMir
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Accounts.AccountMir
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Accounts.AccountMir
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Accounts.AccountMir
instance GHC.Show.Show Blockfrost.Types.Cardano.Accounts.AccountMir
instance Data.Aeson.Types.ToJSON.ToJSON Blockfrost.Types.Cardano.Accounts.AddressAssociated
instance Data.Aeson.Types.FromJSON.FromJSON Blockfrost.Types.Cardano.Accounts.AddressAssociated
instance GHC.Generics.Generic Blockfrost.Types.Cardano.Accounts.AddressAssociated
instance GHC.Show.Show Blockfrost.Types.Cardano.Accounts.AddressAssociated
instance GHC.Classes.Eq Blockfrost.Types.Cardano.Accounts.AddressAssociated
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Accounts.AddressAssociated
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Accounts.AccountMir
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Accounts.AccountWithdrawal
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Accounts.AccountRegistration
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Accounts.AccountRegistrationAction
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Accounts.AccountDelegation
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Accounts.AccountHistory
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Accounts.AccountReward
instance Servant.Docs.Internal.ToSample Blockfrost.Types.Cardano.Accounts.AccountInfo


-- | Types of Cardano
module Blockfrost.Types.Cardano


-- | Blockfrost types
module Blockfrost.Types

-- | Fancy JSON error returned by the server
data ApiError
ApiError :: Text -> Text -> Int -> ApiError
[apiError] :: ApiError -> Text
[apiErrorMessage] :: ApiError -> Text
[apiErrorCode] :: ApiError -> Int


-- | Lenses for Blockfrost types
module Blockfrost.Lens
class HasUrl s a | s -> a
url :: HasUrl s a => Lens' s a
class HasVersion s a | s -> a
version :: HasVersion s a => Lens' s a
class HasActive s a | s -> a
active :: HasActive s a => Lens' s a
class HasActiveEpoch s a | s -> a
activeEpoch :: HasActiveEpoch s a => Lens' s a
class HasControlledAmount s a | s -> a
controlledAmount :: HasControlledAmount s a => Lens' s a
class HasPoolId s a | s -> a
poolId :: HasPoolId s a => Lens' s a
class HasReservesSum s a | s -> a
reservesSum :: HasReservesSum s a => Lens' s a
class HasRewardsSum s a | s -> a
rewardsSum :: HasRewardsSum s a => Lens' s a
class HasStakeAddress s a | s -> a
stakeAddress :: HasStakeAddress s a => Lens' s a
class HasTreasurySum s a | s -> a
treasurySum :: HasTreasurySum s a => Lens' s a
class HasWithdrawableAmount s a | s -> a
withdrawableAmount :: HasWithdrawableAmount s a => Lens' s a
class HasWithdrawalsSum s a | s -> a
withdrawalsSum :: HasWithdrawalsSum s a => Lens' s a
class HasAmount s a | s -> a
amount :: HasAmount s a => Lens' s a
class HasEpoch s a | s -> a
epoch :: HasEpoch s a => Lens' s a
class HasTxHash s a | s -> a
txHash :: HasTxHash s a => Lens' s a
class HasAction s a | s -> a
action :: HasAction s a => Lens' s a
class HasAddress s a | s -> a
address :: HasAddress s a => Lens' s a
class HasScript s a | s -> a
script :: HasScript s a => Lens' s a
class HasType s a | s -> a
type_ :: HasType s a => Lens' s a
class HasReceivedSum s a | s -> a
receivedSum :: HasReceivedSum s a => Lens' s a
class HasSentSum s a | s -> a
sentSum :: HasSentSum s a => Lens' s a
class HasTxCount s a | s -> a
txCount :: HasTxCount s a => Lens' s a
class HasBlock s a | s -> a
block :: HasBlock s a => Lens' s a
class HasDataHash s a | s -> a
dataHash :: HasDataHash s a => Lens' s a
class HasOutputIndex s a | s -> a
outputIndex :: HasOutputIndex s a => Lens' s a
class HasBlockHeight s a | s -> a
blockHeight :: HasBlockHeight s a => Lens' s a
class HasBlockTime s a | s -> a
blockTime :: HasBlockTime s a => Lens' s a
class HasTxIndex s a | s -> a
txIndex :: HasTxIndex s a => Lens' s a
class HasAsset s a | s -> a
asset :: HasAsset s a => Lens' s a
class HasQuantity s a | s -> a
quantity :: HasQuantity s a => Lens' s a
class HasAssetName s a | s -> a
assetName :: HasAssetName s a => Lens' s a
class HasFingerprint s a | s -> a
fingerprint :: HasFingerprint s a => Lens' s a
class HasInitialMintTxHash s a | s -> a
initialMintTxHash :: HasInitialMintTxHash s a => Lens' s a
class HasMetadata s a | s -> a
metadata :: HasMetadata s a => Lens' s a
class HasMintOrBurnCount s a | s -> a
mintOrBurnCount :: HasMintOrBurnCount s a => Lens' s a
class HasOnchainMetadata s a | s -> a
onchainMetadata :: HasOnchainMetadata s a => Lens' s a
class HasPolicyId s a | s -> a
policyId :: HasPolicyId s a => Lens' s a
class HasImage s a | s -> a
image :: HasImage s a => Lens' s a
class HasName s a | s -> a
name :: HasName s a => Lens' s a
class HasDecimals s a | s -> a
decimals :: HasDecimals s a => Lens' s a
class HasDescription s a | s -> a
description :: HasDescription s a => Lens' s a
class HasLogo s a | s -> a
logo :: HasLogo s a => Lens' s a
class HasTicker s a | s -> a
ticker :: HasTicker s a => Lens' s a
class HasBlockVrf s a | s -> a
blockVrf :: HasBlockVrf s a => Lens' s a
class HasConfirmations s a | s -> a
confirmations :: HasConfirmations s a => Lens' s a
class HasEpochSlot s a | s -> a
epochSlot :: HasEpochSlot s a => Lens' s a
class HasFees s a | s -> a
fees :: HasFees s a => Lens' s a
class HasHash s a | s -> a
hash :: HasHash s a => Lens' s a
class HasHeight s a | s -> a
height :: HasHeight s a => Lens' s a
class HasNextBlock s a | s -> a
nextBlock :: HasNextBlock s a => Lens' s a
class HasOutput s a | s -> a
output :: HasOutput s a => Lens' s a
class HasPreviousBlock s a | s -> a
previousBlock :: HasPreviousBlock s a => Lens' s a
class HasSize s a | s -> a
size :: HasSize s a => Lens' s a
class HasSlot s a | s -> a
slot :: HasSlot s a => Lens' s a
class HasSlotLeader s a | s -> a
slotLeader :: HasSlotLeader s a => Lens' s a
class HasTime s a | s -> a
time :: HasTime s a => Lens' s a
class HasActiveStake s a | s -> a
activeStake :: HasActiveStake s a => Lens' s a
class HasBlockCount s a | s -> a
blockCount :: HasBlockCount s a => Lens' s a
class HasEndTime s a | s -> a
endTime :: HasEndTime s a => Lens' s a
class HasFirstBlockTime s a | s -> a
firstBlockTime :: HasFirstBlockTime s a => Lens' s a
class HasLastBlockTime s a | s -> a
lastBlockTime :: HasLastBlockTime s a => Lens' s a
class HasStartTime s a | s -> a
startTime :: HasStartTime s a => Lens' s a
class HasA0 s a | s -> a
a0 :: HasA0 s a => Lens' s a
class HasCoinsPerUtxoWord s a | s -> a
coinsPerUtxoWord :: HasCoinsPerUtxoWord s a => Lens' s a
class HasCollateralPercent s a | s -> a
collateralPercent :: HasCollateralPercent s a => Lens' s a
class HasDecentralisationParam s a | s -> a
decentralisationParam :: HasDecentralisationParam s a => Lens' s a
class HasEMax s a | s -> a
eMax :: HasEMax s a => Lens' s a
class HasExtraEntropy s a | s -> a
extraEntropy :: HasExtraEntropy s a => Lens' s a
class HasKeyDeposit s a | s -> a
keyDeposit :: HasKeyDeposit s a => Lens' s a
class HasMaxBlockExMem s a | s -> a
maxBlockExMem :: HasMaxBlockExMem s a => Lens' s a
class HasMaxBlockExSteps s a | s -> a
maxBlockExSteps :: HasMaxBlockExSteps s a => Lens' s a
class HasMaxBlockHeaderSize s a | s -> a
maxBlockHeaderSize :: HasMaxBlockHeaderSize s a => Lens' s a
class HasMaxBlockSize s a | s -> a
maxBlockSize :: HasMaxBlockSize s a => Lens' s a
class HasMaxCollateralInputs s a | s -> a
maxCollateralInputs :: HasMaxCollateralInputs s a => Lens' s a
class HasMaxTxExMem s a | s -> a
maxTxExMem :: HasMaxTxExMem s a => Lens' s a
class HasMaxTxExSteps s a | s -> a
maxTxExSteps :: HasMaxTxExSteps s a => Lens' s a
class HasMaxTxSize s a | s -> a
maxTxSize :: HasMaxTxSize s a => Lens' s a
class HasMaxValSize s a | s -> a
maxValSize :: HasMaxValSize s a => Lens' s a
class HasMinFeeA s a | s -> a
minFeeA :: HasMinFeeA s a => Lens' s a
class HasMinFeeB s a | s -> a
minFeeB :: HasMinFeeB s a => Lens' s a
class HasMinPoolCost s a | s -> a
minPoolCost :: HasMinPoolCost s a => Lens' s a
class HasMinUtxo s a | s -> a
minUtxo :: HasMinUtxo s a => Lens' s a
class HasNOpt s a | s -> a
nOpt :: HasNOpt s a => Lens' s a
class HasNonce s a | s -> a
nonce :: HasNonce s a => Lens' s a
class HasPoolDeposit s a | s -> a
poolDeposit :: HasPoolDeposit s a => Lens' s a
class HasPriceMem s a | s -> a
priceMem :: HasPriceMem s a => Lens' s a
class HasPriceStep s a | s -> a
priceStep :: HasPriceStep s a => Lens' s a
class HasProtocolMajorVer s a | s -> a
protocolMajorVer :: HasProtocolMajorVer s a => Lens' s a
class HasProtocolMinorVer s a | s -> a
protocolMinorVer :: HasProtocolMinorVer s a => Lens' s a
class HasRho s a | s -> a
rho :: HasRho s a => Lens' s a
class HasTau s a | s -> a
tau :: HasTau s a => Lens' s a
class HasActiveSlotsCoefficient s a | s -> a
activeSlotsCoefficient :: HasActiveSlotsCoefficient s a => Lens' s a
class HasEpochLength s a | s -> a
epochLength :: HasEpochLength s a => Lens' s a
class HasMaxKesEvolutions s a | s -> a
maxKesEvolutions :: HasMaxKesEvolutions s a => Lens' s a
class HasMaxLovelaceSupply s a | s -> a
maxLovelaceSupply :: HasMaxLovelaceSupply s a => Lens' s a
class HasNetworkMagic s a | s -> a
networkMagic :: HasNetworkMagic s a => Lens' s a
class HasSecurityParam s a | s -> a
securityParam :: HasSecurityParam s a => Lens' s a
class HasSlotLength s a | s -> a
slotLength :: HasSlotLength s a => Lens' s a
class HasSlotsPerKesPeriod s a | s -> a
slotsPerKesPeriod :: HasSlotsPerKesPeriod s a => Lens' s a
class HasSystemStart s a | s -> a
systemStart :: HasSystemStart s a => Lens' s a
class HasUpdateQuorum s a | s -> a
updateQuorum :: HasUpdateQuorum s a => Lens' s a
class HasCip10 s a | s -> a
cip10 :: HasCip10 s a => Lens' s a
class HasCount s a | s -> a
count :: HasCount s a => Lens' s a
class HasLabel s a | s -> a
label :: HasLabel s a => Lens' s a
class HasJSONMetadata s a | s -> a
jSONMetadata :: HasJSONMetadata s a => Lens' s a
class HasStake s a | s -> a
stake :: HasStake s a => Lens' s a
class HasSupply s a | s -> a
supply :: HasSupply s a => Lens' s a
class HasActiveSize s a | s -> a
activeSize :: HasActiveSize s a => Lens' s a
class HasBlocksMinted s a | s -> a
blocksMinted :: HasBlocksMinted s a => Lens' s a
class HasDeclaredPledge s a | s -> a
declaredPledge :: HasDeclaredPledge s a => Lens' s a
class HasFixedCost s a | s -> a
fixedCost :: HasFixedCost s a => Lens' s a
class HasHex s a | s -> a
hex :: HasHex s a => Lens' s a
class HasLiveDelegators s a | s -> a
liveDelegators :: HasLiveDelegators s a => Lens' s a
class HasLivePledge s a | s -> a
livePledge :: HasLivePledge s a => Lens' s a
class HasLiveSaturation s a | s -> a
liveSaturation :: HasLiveSaturation s a => Lens' s a
class HasLiveSize s a | s -> a
liveSize :: HasLiveSize s a => Lens' s a
class HasLiveStake s a | s -> a
liveStake :: HasLiveStake s a => Lens' s a
class HasMarginCost s a | s -> a
marginCost :: HasMarginCost s a => Lens' s a
class HasOwners s a | s -> a
owners :: HasOwners s a => Lens' s a
class HasRegistration s a | s -> a
registration :: HasRegistration s a => Lens' s a
class HasRetirement s a | s -> a
retirement :: HasRetirement s a => Lens' s a
class HasRewardAccount s a | s -> a
rewardAccount :: HasRewardAccount s a => Lens' s a
class HasVrfKey s a | s -> a
vrfKey :: HasVrfKey s a => Lens' s a
class HasBlocks s a | s -> a
blocks :: HasBlocks s a => Lens' s a
class HasDelegatorsCount s a | s -> a
delegatorsCount :: HasDelegatorsCount s a => Lens' s a
class HasRewards s a | s -> a
rewards :: HasRewards s a => Lens' s a
class HasHomepage s a | s -> a
homepage :: HasHomepage s a => Lens' s a
class HasDns s a | s -> a
dns :: HasDns s a => Lens' s a
class HasDnsSrv s a | s -> a
dnsSrv :: HasDnsSrv s a => Lens' s a
class HasIpv4 s a | s -> a
ipv4 :: HasIpv4 s a => Lens' s a
class HasIpv6 s a | s -> a
ipv6 :: HasIpv6 s a => Lens' s a
class HasPort s a | s -> a
port :: HasPort s a => Lens' s a
class HasCertIndex s a | s -> a
certIndex :: HasCertIndex s a => Lens' s a
class HasAssetMintOrBurnCount s a | s -> a
assetMintOrBurnCount :: HasAssetMintOrBurnCount s a => Lens' s a
class HasDelegationCount s a | s -> a
delegationCount :: HasDelegationCount s a => Lens' s a
class HasDeposit s a | s -> a
deposit :: HasDeposit s a => Lens' s a
class HasIndex s a | s -> a
index :: HasIndex s a => Lens' s a
class HasInvalidBefore s a | s -> a
invalidBefore :: HasInvalidBefore s a => Lens' s a
class HasInvalidHereafter s a | s -> a
invalidHereafter :: HasInvalidHereafter s a => Lens' s a
class HasMirCertCount s a | s -> a
mirCertCount :: HasMirCertCount s a => Lens' s a
class HasOutputAmount s a | s -> a
outputAmount :: HasOutputAmount s a => Lens' s a
class HasPoolRetireCount s a | s -> a
poolRetireCount :: HasPoolRetireCount s a => Lens' s a
class HasPoolUpdateCount s a | s -> a
poolUpdateCount :: HasPoolUpdateCount s a => Lens' s a
class HasRedeemerCount s a | s -> a
redeemerCount :: HasRedeemerCount s a => Lens' s a
class HasStakeCertCount s a | s -> a
stakeCertCount :: HasStakeCertCount s a => Lens' s a
class HasUtxoCount s a | s -> a
utxoCount :: HasUtxoCount s a => Lens' s a
class HasValidContract s a | s -> a
validContract :: HasValidContract s a => Lens' s a
class HasWithdrawalCount s a | s -> a
withdrawalCount :: HasWithdrawalCount s a => Lens' s a
class HasInputs s a | s -> a
inputs :: HasInputs s a => Lens' s a
class HasOutputs s a | s -> a
outputs :: HasOutputs s a => Lens' s a
class HasCollateral s a | s -> a
collateral :: HasCollateral s a => Lens' s a
class HasPot s a | s -> a
pot :: HasPot s a => Lens' s a
class HasPledge s a | s -> a
pledge :: HasPledge s a => Lens' s a
class HasRelays s a | s -> a
relays :: HasRelays s a => Lens' s a
class HasRetiringEpoch s a | s -> a
retiringEpoch :: HasRetiringEpoch s a => Lens' s a
class HasDatumHash s a | s -> a
datumHash :: HasDatumHash s a => Lens' s a
class HasFee s a | s -> a
fee :: HasFee s a => Lens' s a
class HasPurpose s a | s -> a
purpose :: HasPurpose s a => Lens' s a
class HasScriptHash s a | s -> a
scriptHash :: HasScriptHash s a => Lens' s a
class HasUnitMem s a | s -> a
unitMem :: HasUnitMem s a => Lens' s a
class HasUnitSteps s a | s -> a
unitSteps :: HasUnitSteps s a => Lens' s a
class HasIpfsHash s a | s -> a
ipfsHash :: HasIpfsHash s a => Lens' s a
class HasState s a | s -> a
state :: HasState s a => Lens' s a
class HasTimeCreated s a | s -> a
timeCreated :: HasTimeCreated s a => Lens' s a
class HasTimePinned s a | s -> a
timePinned :: HasTimePinned s a => Lens' s a
class HasMetadataHash s a | s -> a
metadataHash :: HasMetadataHash s a => Lens' s a
class HasMetadataUrl s a | s -> a
metadataUrl :: HasMetadataUrl s a => Lens' s a
class HasLatestBlock s a | s -> a
latestBlock :: HasLatestBlock s a => Lens' s a
class HasPayload s a | s -> a
payload :: HasPayload s a => Lens' s a
_AssetAmount :: Prism' Amount SomeDiscrete
_AdaAmount :: Prism' Amount Lovelaces
instance Blockfrost.Lens.HasHeight Blockfrost.Types.Shared.BlockIndex.BlockIndex GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasIndex Blockfrost.Types.Shared.BlockIndex.BlockIndex (GHC.Maybe.Maybe GHC.Integer.Type.Integer)
instance Blockfrost.Lens.HasPayload Blockfrost.Types.NutLink.NutlinkTicker Data.Aeson.Types.Internal.Value
instance Blockfrost.Lens.HasBlockHeight Blockfrost.Types.NutLink.NutlinkTicker GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasTxHash Blockfrost.Types.NutLink.NutlinkTicker Blockfrost.Types.Shared.TxHash.TxHash
instance Blockfrost.Lens.HasTxIndex Blockfrost.Types.NutLink.NutlinkTicker GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasLatestBlock Blockfrost.Types.NutLink.NutlinkAddressTicker GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasCount Blockfrost.Types.NutLink.NutlinkAddressTicker GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasName Blockfrost.Types.NutLink.NutlinkAddressTicker Data.Text.Internal.Text
instance Blockfrost.Lens.HasMetadataUrl Blockfrost.Types.NutLink.NutlinkAddress Data.Text.Internal.Text
instance Blockfrost.Lens.HasMetadataHash Blockfrost.Types.NutLink.NutlinkAddress Data.Text.Internal.Text
instance Blockfrost.Lens.HasAddress Blockfrost.Types.NutLink.NutlinkAddress Blockfrost.Types.Shared.Address.Address
instance Blockfrost.Lens.HasMetadata Blockfrost.Types.NutLink.NutlinkAddress (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Value)
instance Blockfrost.Lens.HasTimePinned Blockfrost.Types.IPFS.IPFSPin Data.Time.Clock.Internal.POSIXTime.POSIXTime
instance Blockfrost.Lens.HasTimeCreated Blockfrost.Types.IPFS.IPFSPin Data.Time.Clock.Internal.POSIXTime.POSIXTime
instance Blockfrost.Lens.HasIpfsHash Blockfrost.Types.IPFS.IPFSPin Data.Text.Internal.Text
instance Blockfrost.Lens.HasSize Blockfrost.Types.IPFS.IPFSPin Blockfrost.Types.Shared.Quantity.Quantity
instance Blockfrost.Lens.HasState Blockfrost.Types.IPFS.IPFSPin Blockfrost.Types.IPFS.PinState
instance Blockfrost.Lens.HasState Blockfrost.Types.IPFS.IPFSPinChange Blockfrost.Types.IPFS.PinState
instance Blockfrost.Lens.HasIpfsHash Blockfrost.Types.IPFS.IPFSPinChange Data.Text.Internal.Text
instance Blockfrost.Lens.HasIpfsHash Blockfrost.Types.IPFS.IPFSAdd Data.Text.Internal.Text
instance Blockfrost.Lens.HasName Blockfrost.Types.IPFS.IPFSAdd Data.Text.Internal.Text
instance Blockfrost.Lens.HasSize Blockfrost.Types.IPFS.IPFSAdd Blockfrost.Types.Shared.Quantity.Quantity
instance Blockfrost.Lens.HasUnitSteps Blockfrost.Types.Cardano.Transactions.TransactionRedeemer Blockfrost.Types.Shared.Quantity.Quantity
instance Blockfrost.Lens.HasUnitMem Blockfrost.Types.Cardano.Transactions.TransactionRedeemer Blockfrost.Types.Shared.Quantity.Quantity
instance Blockfrost.Lens.HasScriptHash Blockfrost.Types.Cardano.Transactions.TransactionRedeemer Blockfrost.Types.Shared.ScriptHash.ScriptHash
instance Blockfrost.Lens.HasPurpose Blockfrost.Types.Cardano.Transactions.TransactionRedeemer Blockfrost.Types.Cardano.Transactions.ValidationPurpose
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasFee Blockfrost.Types.Cardano.Transactions.TransactionRedeemer a
instance Blockfrost.Lens.HasDatumHash Blockfrost.Types.Cardano.Transactions.TransactionRedeemer Blockfrost.Types.Shared.DatumHash.DatumHash
instance Blockfrost.Lens.HasTxIndex Blockfrost.Types.Cardano.Transactions.TransactionRedeemer GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasLabel Blockfrost.Types.Cardano.Transactions.TransactionMetaCBOR Data.Text.Internal.Text
instance Blockfrost.Lens.HasMetadata Blockfrost.Types.Cardano.Transactions.TransactionMetaCBOR (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasJSONMetadata Blockfrost.Types.Cardano.Transactions.TransactionMetaJSON (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Value)
instance Blockfrost.Lens.HasLabel Blockfrost.Types.Cardano.Transactions.TransactionMetaJSON Data.Text.Internal.Text
instance Blockfrost.Lens.HasRetiringEpoch Blockfrost.Types.Cardano.Transactions.TransactionPoolRetiring Blockfrost.Types.Shared.Epoch.Epoch
instance Blockfrost.Lens.HasCertIndex Blockfrost.Types.Cardano.Transactions.TransactionPoolRetiring GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasPoolId Blockfrost.Types.Cardano.Transactions.TransactionPoolRetiring Blockfrost.Types.Shared.PoolId.PoolId
instance Blockfrost.Lens.HasDescription Blockfrost.Types.Cardano.Transactions.PoolUpdateMetadata (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasHash Blockfrost.Types.Cardano.Transactions.PoolUpdateMetadata (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasHomepage Blockfrost.Types.Cardano.Transactions.PoolUpdateMetadata (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasName Blockfrost.Types.Cardano.Transactions.PoolUpdateMetadata (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasTicker Blockfrost.Types.Cardano.Transactions.PoolUpdateMetadata (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasUrl Blockfrost.Types.Cardano.Transactions.PoolUpdateMetadata (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasRelays Blockfrost.Types.Cardano.Transactions.TransactionPoolUpdate [Blockfrost.Types.Cardano.Pools.PoolRelay]
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasPledge Blockfrost.Types.Cardano.Transactions.TransactionPoolUpdate a
instance Blockfrost.Lens.HasActiveEpoch Blockfrost.Types.Cardano.Transactions.TransactionPoolUpdate Blockfrost.Types.Shared.Epoch.Epoch
instance Blockfrost.Lens.HasCertIndex Blockfrost.Types.Cardano.Transactions.TransactionPoolUpdate GHC.Integer.Type.Integer
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasFixedCost Blockfrost.Types.Cardano.Transactions.TransactionPoolUpdate a
instance Blockfrost.Lens.HasMarginCost Blockfrost.Types.Cardano.Transactions.TransactionPoolUpdate GHC.Types.Double
instance Blockfrost.Lens.HasMetadata Blockfrost.Types.Cardano.Transactions.TransactionPoolUpdate (GHC.Maybe.Maybe Blockfrost.Types.Cardano.Transactions.PoolUpdateMetadata)
instance Blockfrost.Lens.HasOwners Blockfrost.Types.Cardano.Transactions.TransactionPoolUpdate [Blockfrost.Types.Shared.Address.Address]
instance Blockfrost.Lens.HasPoolId Blockfrost.Types.Cardano.Transactions.TransactionPoolUpdate Blockfrost.Types.Shared.PoolId.PoolId
instance Blockfrost.Lens.HasRewardAccount Blockfrost.Types.Cardano.Transactions.TransactionPoolUpdate Blockfrost.Types.Shared.Address.Address
instance Blockfrost.Lens.HasVrfKey Blockfrost.Types.Cardano.Transactions.TransactionPoolUpdate Data.Text.Internal.Text
instance Blockfrost.Lens.HasPot Blockfrost.Types.Cardano.Transactions.TransactionMir Blockfrost.Types.Cardano.Transactions.Pot
instance Blockfrost.Lens.HasAddress Blockfrost.Types.Cardano.Transactions.TransactionMir Blockfrost.Types.Shared.Address.Address
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasAmount Blockfrost.Types.Cardano.Transactions.TransactionMir a
instance Blockfrost.Lens.HasCertIndex Blockfrost.Types.Cardano.Transactions.TransactionMir GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasAddress Blockfrost.Types.Cardano.Transactions.TransactionWithdrawal Blockfrost.Types.Shared.Address.Address
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasAmount Blockfrost.Types.Cardano.Transactions.TransactionWithdrawal a
instance Blockfrost.Lens.HasActiveEpoch Blockfrost.Types.Cardano.Transactions.TransactionDelegation Blockfrost.Types.Shared.Epoch.Epoch
instance Blockfrost.Lens.HasAddress Blockfrost.Types.Cardano.Transactions.TransactionDelegation Blockfrost.Types.Shared.Address.Address
instance Blockfrost.Lens.HasCertIndex Blockfrost.Types.Cardano.Transactions.TransactionDelegation GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasPoolId Blockfrost.Types.Cardano.Transactions.TransactionDelegation Blockfrost.Types.Shared.PoolId.PoolId
instance Blockfrost.Lens.HasAddress Blockfrost.Types.Cardano.Transactions.TransactionStake Blockfrost.Types.Shared.Address.Address
instance Blockfrost.Lens.HasCertIndex Blockfrost.Types.Cardano.Transactions.TransactionStake GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasRegistration Blockfrost.Types.Cardano.Transactions.TransactionStake GHC.Types.Bool
instance Blockfrost.Lens.HasAddress Blockfrost.Types.Cardano.Transactions.UtxoOutput Blockfrost.Types.Shared.Address.Address
instance Blockfrost.Lens.HasAmount Blockfrost.Types.Cardano.Transactions.UtxoOutput [Blockfrost.Types.Shared.Amount.Amount]
instance Blockfrost.Lens.HasDataHash Blockfrost.Types.Cardano.Transactions.UtxoOutput (GHC.Maybe.Maybe Blockfrost.Types.Shared.DatumHash.DatumHash)
instance Blockfrost.Lens.HasOutputIndex Blockfrost.Types.Cardano.Transactions.UtxoOutput GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasCollateral Blockfrost.Types.Cardano.Transactions.UtxoInput GHC.Types.Bool
instance Blockfrost.Lens.HasAddress Blockfrost.Types.Cardano.Transactions.UtxoInput Blockfrost.Types.Shared.Address.Address
instance Blockfrost.Lens.HasAmount Blockfrost.Types.Cardano.Transactions.UtxoInput [Blockfrost.Types.Shared.Amount.Amount]
instance Blockfrost.Lens.HasDataHash Blockfrost.Types.Cardano.Transactions.UtxoInput (GHC.Maybe.Maybe Blockfrost.Types.Shared.DatumHash.DatumHash)
instance Blockfrost.Lens.HasOutputIndex Blockfrost.Types.Cardano.Transactions.UtxoInput GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasTxHash Blockfrost.Types.Cardano.Transactions.UtxoInput Blockfrost.Types.Shared.TxHash.TxHash
instance Blockfrost.Lens.HasOutputs Blockfrost.Types.Cardano.Transactions.TransactionUtxos [Blockfrost.Types.Cardano.Transactions.UtxoOutput]
instance Blockfrost.Lens.HasInputs Blockfrost.Types.Cardano.Transactions.TransactionUtxos [Blockfrost.Types.Cardano.Transactions.UtxoInput]
instance Blockfrost.Lens.HasHash Blockfrost.Types.Cardano.Transactions.TransactionUtxos Blockfrost.Types.Shared.TxHash.TxHash
instance Blockfrost.Lens.HasWithdrawalCount Blockfrost.Types.Cardano.Transactions.Transaction GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasValidContract Blockfrost.Types.Cardano.Transactions.Transaction GHC.Types.Bool
instance Blockfrost.Lens.HasUtxoCount Blockfrost.Types.Cardano.Transactions.Transaction GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasStakeCertCount Blockfrost.Types.Cardano.Transactions.Transaction GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasRedeemerCount Blockfrost.Types.Cardano.Transactions.Transaction GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasPoolUpdateCount Blockfrost.Types.Cardano.Transactions.Transaction GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasPoolRetireCount Blockfrost.Types.Cardano.Transactions.Transaction GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasOutputAmount Blockfrost.Types.Cardano.Transactions.Transaction [Blockfrost.Types.Shared.Amount.Amount]
instance Blockfrost.Lens.HasMirCertCount Blockfrost.Types.Cardano.Transactions.Transaction GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasInvalidHereafter Blockfrost.Types.Cardano.Transactions.Transaction (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasInvalidBefore Blockfrost.Types.Cardano.Transactions.Transaction (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasIndex Blockfrost.Types.Cardano.Transactions.Transaction GHC.Integer.Type.Integer
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasDeposit Blockfrost.Types.Cardano.Transactions.Transaction a
instance Blockfrost.Lens.HasDelegationCount Blockfrost.Types.Cardano.Transactions.Transaction GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasAssetMintOrBurnCount Blockfrost.Types.Cardano.Transactions.Transaction GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasBlock Blockfrost.Types.Cardano.Transactions.Transaction Blockfrost.Types.Shared.BlockHash.BlockHash
instance Blockfrost.Lens.HasBlockHeight Blockfrost.Types.Cardano.Transactions.Transaction GHC.Integer.Type.Integer
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasFees Blockfrost.Types.Cardano.Transactions.Transaction a
instance Blockfrost.Lens.HasHash Blockfrost.Types.Cardano.Transactions.Transaction Data.Text.Internal.Text
instance Blockfrost.Lens.HasSize Blockfrost.Types.Cardano.Transactions.Transaction GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasSlot Blockfrost.Types.Cardano.Transactions.Transaction Blockfrost.Types.Shared.Slot.Slot
instance Blockfrost.Lens.HasCertIndex Blockfrost.Types.Cardano.Pools.PoolUpdate GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasAction Blockfrost.Types.Cardano.Pools.PoolUpdate Blockfrost.Types.Cardano.Pools.PoolRegistrationAction
instance Blockfrost.Lens.HasTxHash Blockfrost.Types.Cardano.Pools.PoolUpdate Blockfrost.Types.Shared.TxHash.TxHash
instance Blockfrost.Lens.HasAddress Blockfrost.Types.Cardano.Pools.PoolDelegator Data.Text.Internal.Text
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasLiveStake Blockfrost.Types.Cardano.Pools.PoolDelegator a
instance Blockfrost.Lens.HasPort Blockfrost.Types.Cardano.Pools.PoolRelay GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasIpv6 Blockfrost.Types.Cardano.Pools.PoolRelay (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasIpv4 Blockfrost.Types.Cardano.Pools.PoolRelay (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasDnsSrv Blockfrost.Types.Cardano.Pools.PoolRelay (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasDns Blockfrost.Types.Cardano.Pools.PoolRelay (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasHomepage Blockfrost.Types.Cardano.Pools.PoolMetadata (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasDescription Blockfrost.Types.Cardano.Pools.PoolMetadata (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasHash Blockfrost.Types.Cardano.Pools.PoolMetadata (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasHex Blockfrost.Types.Cardano.Pools.PoolMetadata Data.Text.Internal.Text
instance Blockfrost.Lens.HasName Blockfrost.Types.Cardano.Pools.PoolMetadata (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasPoolId Blockfrost.Types.Cardano.Pools.PoolMetadata Blockfrost.Types.Shared.PoolId.PoolId
instance Blockfrost.Lens.HasTicker Blockfrost.Types.Cardano.Pools.PoolMetadata (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasUrl Blockfrost.Types.Cardano.Pools.PoolMetadata (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasRewards Blockfrost.Types.Cardano.Pools.PoolHistory a
instance Blockfrost.Lens.HasDelegatorsCount Blockfrost.Types.Cardano.Pools.PoolHistory GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasBlocks Blockfrost.Types.Cardano.Pools.PoolHistory GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasActiveSize Blockfrost.Types.Cardano.Pools.PoolHistory GHC.Types.Double
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasActiveStake Blockfrost.Types.Cardano.Pools.PoolHistory a
instance Blockfrost.Lens.HasEpoch Blockfrost.Types.Cardano.Pools.PoolHistory Blockfrost.Types.Shared.Epoch.Epoch
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasFees Blockfrost.Types.Cardano.Pools.PoolHistory a
instance Blockfrost.Lens.HasVrfKey Blockfrost.Types.Cardano.Pools.PoolInfo Data.Text.Internal.Text
instance Blockfrost.Lens.HasRewardAccount Blockfrost.Types.Cardano.Pools.PoolInfo Blockfrost.Types.Shared.Address.Address
instance Blockfrost.Lens.HasRetirement Blockfrost.Types.Cardano.Pools.PoolInfo [Data.Text.Internal.Text]
instance Blockfrost.Lens.HasRegistration Blockfrost.Types.Cardano.Pools.PoolInfo [Data.Text.Internal.Text]
instance Blockfrost.Lens.HasOwners Blockfrost.Types.Cardano.Pools.PoolInfo [Blockfrost.Types.Shared.Address.Address]
instance Blockfrost.Lens.HasMarginCost Blockfrost.Types.Cardano.Pools.PoolInfo GHC.Types.Double
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasLiveStake Blockfrost.Types.Cardano.Pools.PoolInfo a
instance Blockfrost.Lens.HasLiveSize Blockfrost.Types.Cardano.Pools.PoolInfo GHC.Types.Double
instance Blockfrost.Lens.HasLiveSaturation Blockfrost.Types.Cardano.Pools.PoolInfo GHC.Types.Double
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasLivePledge Blockfrost.Types.Cardano.Pools.PoolInfo a
instance Blockfrost.Lens.HasLiveDelegators Blockfrost.Types.Cardano.Pools.PoolInfo GHC.Types.Double
instance Blockfrost.Lens.HasHex Blockfrost.Types.Cardano.Pools.PoolInfo Data.Text.Internal.Text
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasFixedCost Blockfrost.Types.Cardano.Pools.PoolInfo a
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasDeclaredPledge Blockfrost.Types.Cardano.Pools.PoolInfo a
instance Blockfrost.Lens.HasBlocksMinted Blockfrost.Types.Cardano.Pools.PoolInfo GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasActiveSize Blockfrost.Types.Cardano.Pools.PoolInfo GHC.Types.Double
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasActiveStake Blockfrost.Types.Cardano.Pools.PoolInfo a
instance Blockfrost.Lens.HasPoolId Blockfrost.Types.Cardano.Pools.PoolInfo Blockfrost.Types.Shared.PoolId.PoolId
instance Blockfrost.Lens.HasEpoch Blockfrost.Types.Cardano.Pools.PoolEpoch Blockfrost.Types.Shared.Epoch.Epoch
instance Blockfrost.Lens.HasPoolId Blockfrost.Types.Cardano.Pools.PoolEpoch Blockfrost.Types.Shared.PoolId.PoolId
instance Blockfrost.Lens.HasSupply Blockfrost.Types.Cardano.Network.Network Blockfrost.Types.Cardano.Network.NetworkSupply
instance Blockfrost.Lens.HasStake Blockfrost.Types.Cardano.Network.Network Blockfrost.Types.Cardano.Network.NetworkStake
instance Blockfrost.Lens.HasMetadata Blockfrost.Types.Cardano.Metadata.TxMetaCBOR (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasTxHash Blockfrost.Types.Cardano.Metadata.TxMetaCBOR Blockfrost.Types.Shared.TxHash.TxHash
instance Blockfrost.Lens.HasJSONMetadata Blockfrost.Types.Cardano.Metadata.TxMetaJSON (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Value)
instance Blockfrost.Lens.HasTxHash Blockfrost.Types.Cardano.Metadata.TxMetaJSON Blockfrost.Types.Shared.TxHash.TxHash
instance Blockfrost.Lens.HasLabel Blockfrost.Types.Cardano.Metadata.TxMeta Data.Text.Internal.Text
instance Blockfrost.Lens.HasCount Blockfrost.Types.Cardano.Metadata.TxMeta Blockfrost.Types.Shared.Quantity.Quantity
instance Blockfrost.Lens.HasCip10 Blockfrost.Types.Cardano.Metadata.TxMeta (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasUpdateQuorum Blockfrost.Types.Cardano.Genesis.Genesis GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasSystemStart Blockfrost.Types.Cardano.Genesis.Genesis Data.Time.Clock.Internal.POSIXTime.POSIXTime
instance Blockfrost.Lens.HasSlotsPerKesPeriod Blockfrost.Types.Cardano.Genesis.Genesis GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasSlotLength Blockfrost.Types.Cardano.Genesis.Genesis GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasSecurityParam Blockfrost.Types.Cardano.Genesis.Genesis GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasNetworkMagic Blockfrost.Types.Cardano.Genesis.Genesis GHC.Integer.Type.Integer
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasMaxLovelaceSupply Blockfrost.Types.Cardano.Genesis.Genesis a
instance Blockfrost.Lens.HasMaxKesEvolutions Blockfrost.Types.Cardano.Genesis.Genesis GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasEpochLength Blockfrost.Types.Cardano.Genesis.Genesis GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasActiveSlotsCoefficient Blockfrost.Types.Cardano.Genesis.Genesis GHC.Types.Double
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasAmount Blockfrost.Types.Cardano.Epochs.PoolStakeDistribution a
instance Blockfrost.Lens.HasStakeAddress Blockfrost.Types.Cardano.Epochs.PoolStakeDistribution Blockfrost.Types.Shared.Address.Address
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasAmount Blockfrost.Types.Cardano.Epochs.StakeDistribution a
instance Blockfrost.Lens.HasPoolId Blockfrost.Types.Cardano.Epochs.StakeDistribution Blockfrost.Types.Shared.PoolId.PoolId
instance Blockfrost.Lens.HasStakeAddress Blockfrost.Types.Cardano.Epochs.StakeDistribution Blockfrost.Types.Shared.Address.Address
instance Blockfrost.Lens.HasTau Blockfrost.Types.Cardano.Epochs.ProtocolParams GHC.Types.Double
instance Blockfrost.Lens.HasRho Blockfrost.Types.Cardano.Epochs.ProtocolParams GHC.Types.Double
instance Blockfrost.Lens.HasProtocolMinorVer Blockfrost.Types.Cardano.Epochs.ProtocolParams GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasProtocolMajorVer Blockfrost.Types.Cardano.Epochs.ProtocolParams GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasPriceStep Blockfrost.Types.Cardano.Epochs.ProtocolParams GHC.Types.Double
instance Blockfrost.Lens.HasPriceMem Blockfrost.Types.Cardano.Epochs.ProtocolParams GHC.Types.Double
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasPoolDeposit Blockfrost.Types.Cardano.Epochs.ProtocolParams a
instance Blockfrost.Lens.HasNonce Blockfrost.Types.Cardano.Epochs.ProtocolParams Data.Text.Internal.Text
instance Blockfrost.Lens.HasNOpt Blockfrost.Types.Cardano.Epochs.ProtocolParams GHC.Integer.Type.Integer
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasMinUtxo Blockfrost.Types.Cardano.Epochs.ProtocolParams a
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasMinPoolCost Blockfrost.Types.Cardano.Epochs.ProtocolParams a
instance Blockfrost.Lens.HasMinFeeB Blockfrost.Types.Cardano.Epochs.ProtocolParams GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasMinFeeA Blockfrost.Types.Cardano.Epochs.ProtocolParams GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasMaxValSize Blockfrost.Types.Cardano.Epochs.ProtocolParams Blockfrost.Types.Shared.Quantity.Quantity
instance Blockfrost.Lens.HasMaxTxSize Blockfrost.Types.Cardano.Epochs.ProtocolParams GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasMaxTxExSteps Blockfrost.Types.Cardano.Epochs.ProtocolParams Blockfrost.Types.Shared.Quantity.Quantity
instance Blockfrost.Lens.HasMaxTxExMem Blockfrost.Types.Cardano.Epochs.ProtocolParams Blockfrost.Types.Shared.Quantity.Quantity
instance Blockfrost.Lens.HasMaxCollateralInputs Blockfrost.Types.Cardano.Epochs.ProtocolParams GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasMaxBlockSize Blockfrost.Types.Cardano.Epochs.ProtocolParams GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasMaxBlockHeaderSize Blockfrost.Types.Cardano.Epochs.ProtocolParams GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasMaxBlockExSteps Blockfrost.Types.Cardano.Epochs.ProtocolParams Blockfrost.Types.Shared.Quantity.Quantity
instance Blockfrost.Lens.HasMaxBlockExMem Blockfrost.Types.Cardano.Epochs.ProtocolParams Blockfrost.Types.Shared.Quantity.Quantity
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasKeyDeposit Blockfrost.Types.Cardano.Epochs.ProtocolParams a
instance Blockfrost.Lens.HasExtraEntropy Blockfrost.Types.Cardano.Epochs.ProtocolParams (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Value)
instance Blockfrost.Lens.HasEMax Blockfrost.Types.Cardano.Epochs.ProtocolParams GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasDecentralisationParam Blockfrost.Types.Cardano.Epochs.ProtocolParams GHC.Types.Double
instance Blockfrost.Lens.HasCollateralPercent Blockfrost.Types.Cardano.Epochs.ProtocolParams GHC.Integer.Type.Integer
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasCoinsPerUtxoWord Blockfrost.Types.Cardano.Epochs.ProtocolParams a
instance Blockfrost.Lens.HasA0 Blockfrost.Types.Cardano.Epochs.ProtocolParams GHC.Types.Double
instance Blockfrost.Lens.HasEpoch Blockfrost.Types.Cardano.Epochs.ProtocolParams Blockfrost.Types.Shared.Epoch.Epoch
instance Blockfrost.Lens.HasStartTime Blockfrost.Types.Cardano.Epochs.EpochInfo Data.Time.Clock.Internal.POSIXTime.POSIXTime
instance Blockfrost.Lens.HasLastBlockTime Blockfrost.Types.Cardano.Epochs.EpochInfo Data.Time.Clock.Internal.POSIXTime.POSIXTime
instance Blockfrost.Lens.HasFirstBlockTime Blockfrost.Types.Cardano.Epochs.EpochInfo Data.Time.Clock.Internal.POSIXTime.POSIXTime
instance Blockfrost.Lens.HasEndTime Blockfrost.Types.Cardano.Epochs.EpochInfo Data.Time.Clock.Internal.POSIXTime.POSIXTime
instance Blockfrost.Lens.HasBlockCount Blockfrost.Types.Cardano.Epochs.EpochInfo GHC.Integer.Type.Integer
instance (a GHC.Types.~ GHC.Maybe.Maybe Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasActiveStake Blockfrost.Types.Cardano.Epochs.EpochInfo a
instance Blockfrost.Lens.HasEpoch Blockfrost.Types.Cardano.Epochs.EpochInfo Blockfrost.Types.Shared.Epoch.Epoch
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasFees Blockfrost.Types.Cardano.Epochs.EpochInfo a
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasOutput Blockfrost.Types.Cardano.Epochs.EpochInfo a
instance Blockfrost.Lens.HasTxCount Blockfrost.Types.Cardano.Epochs.EpochInfo GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasTime Blockfrost.Types.Cardano.Blocks.Block Data.Time.Clock.Internal.POSIXTime.POSIXTime
instance Blockfrost.Lens.HasSlotLeader Blockfrost.Types.Cardano.Blocks.Block Data.Text.Internal.Text
instance Blockfrost.Lens.HasSlot Blockfrost.Types.Cardano.Blocks.Block (GHC.Maybe.Maybe Blockfrost.Types.Shared.Slot.Slot)
instance Blockfrost.Lens.HasSize Blockfrost.Types.Cardano.Blocks.Block GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasPreviousBlock Blockfrost.Types.Cardano.Blocks.Block (GHC.Maybe.Maybe Blockfrost.Types.Shared.BlockHash.BlockHash)
instance (a GHC.Types.~ GHC.Maybe.Maybe Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasOutput Blockfrost.Types.Cardano.Blocks.Block a
instance Blockfrost.Lens.HasNextBlock Blockfrost.Types.Cardano.Blocks.Block (GHC.Maybe.Maybe Blockfrost.Types.Shared.BlockHash.BlockHash)
instance Blockfrost.Lens.HasHeight Blockfrost.Types.Cardano.Blocks.Block (GHC.Maybe.Maybe GHC.Integer.Type.Integer)
instance Blockfrost.Lens.HasHash Blockfrost.Types.Cardano.Blocks.Block Blockfrost.Types.Shared.BlockHash.BlockHash
instance (a GHC.Types.~ GHC.Maybe.Maybe Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasFees Blockfrost.Types.Cardano.Blocks.Block a
instance Blockfrost.Lens.HasEpochSlot Blockfrost.Types.Cardano.Blocks.Block (GHC.Maybe.Maybe GHC.Integer.Type.Integer)
instance Blockfrost.Lens.HasConfirmations Blockfrost.Types.Cardano.Blocks.Block GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasBlockVrf Blockfrost.Types.Cardano.Blocks.Block (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasEpoch Blockfrost.Types.Cardano.Blocks.Block (GHC.Maybe.Maybe Blockfrost.Types.Shared.Epoch.Epoch)
instance Blockfrost.Lens.HasTxCount Blockfrost.Types.Cardano.Blocks.Block GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasAddress Blockfrost.Types.Cardano.Assets.AssetAddress Blockfrost.Types.Shared.Address.Address
instance Blockfrost.Lens.HasQuantity Blockfrost.Types.Cardano.Assets.AssetAddress Blockfrost.Types.Shared.Quantity.Quantity
instance Blockfrost.Lens.HasBlockHeight Blockfrost.Types.Cardano.Assets.AssetTransaction GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasTxHash Blockfrost.Types.Cardano.Assets.AssetTransaction Blockfrost.Types.Shared.TxHash.TxHash
instance Blockfrost.Lens.HasTxIndex Blockfrost.Types.Cardano.Assets.AssetTransaction GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasAction Blockfrost.Types.Cardano.Assets.AssetHistory Blockfrost.Types.Cardano.Assets.AssetAction
instance Blockfrost.Lens.HasAmount Blockfrost.Types.Cardano.Assets.AssetHistory Blockfrost.Types.Shared.Quantity.Quantity
instance Blockfrost.Lens.HasTxHash Blockfrost.Types.Cardano.Assets.AssetHistory Blockfrost.Types.Shared.TxHash.TxHash
instance Blockfrost.Lens.HasTicker Blockfrost.Types.Cardano.Assets.AssetMetadata (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasLogo Blockfrost.Types.Cardano.Assets.AssetMetadata (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasDescription Blockfrost.Types.Cardano.Assets.AssetMetadata Data.Text.Internal.Text
instance Blockfrost.Lens.HasDecimals Blockfrost.Types.Cardano.Assets.AssetMetadata (GHC.Maybe.Maybe GHC.Types.Int)
instance Blockfrost.Lens.HasName Blockfrost.Types.Cardano.Assets.AssetMetadata Data.Text.Internal.Text
instance Blockfrost.Lens.HasUrl Blockfrost.Types.Cardano.Assets.AssetMetadata (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasName Blockfrost.Types.Cardano.Assets.AssetOnChainMetadata Data.Text.Internal.Text
instance Blockfrost.Lens.HasImage Blockfrost.Types.Cardano.Assets.AssetOnChainMetadata Data.Text.Internal.Text
instance Blockfrost.Lens.HasPolicyId Blockfrost.Types.Cardano.Assets.AssetDetails Blockfrost.Types.Shared.PolicyId.PolicyId
instance Blockfrost.Lens.HasOnchainMetadata Blockfrost.Types.Cardano.Assets.AssetDetails (GHC.Maybe.Maybe Blockfrost.Types.Cardano.Assets.AssetOnChainMetadata)
instance Blockfrost.Lens.HasMintOrBurnCount Blockfrost.Types.Cardano.Assets.AssetDetails GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasMetadata Blockfrost.Types.Cardano.Assets.AssetDetails (GHC.Maybe.Maybe Blockfrost.Types.Cardano.Assets.AssetMetadata)
instance Blockfrost.Lens.HasInitialMintTxHash Blockfrost.Types.Cardano.Assets.AssetDetails Blockfrost.Types.Shared.TxHash.TxHash
instance Blockfrost.Lens.HasFingerprint Blockfrost.Types.Cardano.Assets.AssetDetails Data.Text.Internal.Text
instance Blockfrost.Lens.HasAssetName Blockfrost.Types.Cardano.Assets.AssetDetails (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasAsset Blockfrost.Types.Cardano.Assets.AssetDetails Data.Text.Internal.Text
instance Blockfrost.Lens.HasQuantity Blockfrost.Types.Cardano.Assets.AssetDetails Blockfrost.Types.Shared.Quantity.Quantity
instance Blockfrost.Lens.HasQuantity Blockfrost.Types.Cardano.Assets.AssetInfo Blockfrost.Types.Shared.Quantity.Quantity
instance Blockfrost.Lens.HasAsset Blockfrost.Types.Cardano.Assets.AssetInfo Data.Text.Internal.Text
instance Blockfrost.Lens.HasTxIndex Blockfrost.Types.Cardano.Addresses.AddressTransaction GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasBlockTime Blockfrost.Types.Cardano.Addresses.AddressTransaction Data.Time.Clock.Internal.POSIXTime.POSIXTime
instance Blockfrost.Lens.HasBlockHeight Blockfrost.Types.Cardano.Addresses.AddressTransaction GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasTxHash Blockfrost.Types.Cardano.Addresses.AddressTransaction Blockfrost.Types.Shared.TxHash.TxHash
instance Blockfrost.Lens.HasOutputIndex Blockfrost.Types.Cardano.Addresses.AddressUtxo GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasDataHash Blockfrost.Types.Cardano.Addresses.AddressUtxo (GHC.Maybe.Maybe Data.Text.Internal.Text)
instance Blockfrost.Lens.HasBlock Blockfrost.Types.Cardano.Addresses.AddressUtxo Blockfrost.Types.Shared.BlockHash.BlockHash
instance Blockfrost.Lens.HasAmount Blockfrost.Types.Cardano.Addresses.AddressUtxo [Blockfrost.Types.Shared.Amount.Amount]
instance Blockfrost.Lens.HasTxHash Blockfrost.Types.Cardano.Addresses.AddressUtxo Blockfrost.Types.Shared.TxHash.TxHash
instance Blockfrost.Lens.HasTxCount Blockfrost.Types.Cardano.Addresses.AddressDetails GHC.Integer.Type.Integer
instance Blockfrost.Lens.HasSentSum Blockfrost.Types.Cardano.Addresses.AddressDetails [Blockfrost.Types.Shared.Amount.Amount]
instance Blockfrost.Lens.HasReceivedSum Blockfrost.Types.Cardano.Addresses.AddressDetails [Blockfrost.Types.Shared.Amount.Amount]
instance Blockfrost.Lens.HasAddress Blockfrost.Types.Cardano.Addresses.AddressDetails Blockfrost.Types.Shared.Address.Address
instance Blockfrost.Lens.HasType Blockfrost.Types.Cardano.Addresses.AddressInfo Blockfrost.Types.Cardano.Addresses.AddressType
instance Blockfrost.Lens.HasScript Blockfrost.Types.Cardano.Addresses.AddressInfo GHC.Types.Bool
instance Blockfrost.Lens.HasAddress Blockfrost.Types.Cardano.Addresses.AddressInfo Blockfrost.Types.Shared.Address.Address
instance Blockfrost.Lens.HasAmount Blockfrost.Types.Cardano.Addresses.AddressInfo [Blockfrost.Types.Shared.Amount.Amount]
instance Blockfrost.Lens.HasStakeAddress Blockfrost.Types.Cardano.Addresses.AddressInfo (GHC.Maybe.Maybe Blockfrost.Types.Shared.Address.Address)
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasAmount Blockfrost.Types.Cardano.Accounts.AccountMir a
instance Blockfrost.Lens.HasTxHash Blockfrost.Types.Cardano.Accounts.AccountMir Blockfrost.Types.Shared.TxHash.TxHash
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasAmount Blockfrost.Types.Cardano.Accounts.AccountWithdrawal a
instance Blockfrost.Lens.HasTxHash Blockfrost.Types.Cardano.Accounts.AccountWithdrawal Blockfrost.Types.Shared.TxHash.TxHash
instance Blockfrost.Lens.HasAction Blockfrost.Types.Cardano.Accounts.AccountRegistration Blockfrost.Types.Cardano.Accounts.AccountRegistrationAction
instance Blockfrost.Lens.HasTxHash Blockfrost.Types.Cardano.Accounts.AccountRegistration Blockfrost.Types.Shared.TxHash.TxHash
instance Blockfrost.Lens.HasTxHash Blockfrost.Types.Cardano.Accounts.AccountDelegation Blockfrost.Types.Shared.TxHash.TxHash
instance Blockfrost.Lens.HasActiveEpoch Blockfrost.Types.Cardano.Accounts.AccountDelegation Blockfrost.Types.Shared.Epoch.Epoch
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasAmount Blockfrost.Types.Cardano.Accounts.AccountDelegation a
instance Blockfrost.Lens.HasPoolId Blockfrost.Types.Cardano.Accounts.AccountDelegation Blockfrost.Types.Shared.PoolId.PoolId
instance Blockfrost.Lens.HasActiveEpoch Blockfrost.Types.Cardano.Accounts.AccountHistory GHC.Integer.Type.Integer
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasAmount Blockfrost.Types.Cardano.Accounts.AccountHistory a
instance Blockfrost.Lens.HasPoolId Blockfrost.Types.Cardano.Accounts.AccountHistory Blockfrost.Types.Shared.PoolId.PoolId
instance Blockfrost.Lens.HasEpoch Blockfrost.Types.Cardano.Accounts.AccountReward Blockfrost.Types.Shared.Epoch.Epoch
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasAmount Blockfrost.Types.Cardano.Accounts.AccountReward a
instance Blockfrost.Lens.HasPoolId Blockfrost.Types.Cardano.Accounts.AccountReward Blockfrost.Types.Shared.PoolId.PoolId
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasWithdrawalsSum Blockfrost.Types.Cardano.Accounts.AccountInfo a
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasWithdrawableAmount Blockfrost.Types.Cardano.Accounts.AccountInfo a
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasTreasurySum Blockfrost.Types.Cardano.Accounts.AccountInfo a
instance Blockfrost.Lens.HasStakeAddress Blockfrost.Types.Cardano.Accounts.AccountInfo Blockfrost.Types.Shared.Address.Address
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasRewardsSum Blockfrost.Types.Cardano.Accounts.AccountInfo a
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasReservesSum Blockfrost.Types.Cardano.Accounts.AccountInfo a
instance Blockfrost.Lens.HasPoolId Blockfrost.Types.Cardano.Accounts.AccountInfo (GHC.Maybe.Maybe Blockfrost.Types.Shared.PoolId.PoolId)
instance (a GHC.Types.~ Blockfrost.Types.Shared.Ada.Lovelaces) => Blockfrost.Lens.HasControlledAmount Blockfrost.Types.Cardano.Accounts.AccountInfo a
instance Blockfrost.Lens.HasActiveEpoch Blockfrost.Types.Cardano.Accounts.AccountInfo (GHC.Maybe.Maybe GHC.Integer.Type.Integer)
instance Blockfrost.Lens.HasActive Blockfrost.Types.Cardano.Accounts.AccountInfo GHC.Types.Bool
instance Blockfrost.Lens.HasVersion Blockfrost.Types.Common.URLVersion Data.Text.Internal.Text
instance Blockfrost.Lens.HasUrl Blockfrost.Types.Common.URLVersion Data.Text.Internal.Text

module Paths_blockfrost_api
version :: Version
getBinDir :: IO FilePath
getLibDir :: IO FilePath
getDynLibDir :: IO FilePath
getDataDir :: IO FilePath
getLibexecDir :: IO FilePath
getDataFileName :: FilePath -> IO FilePath
getSysconfDir :: IO FilePath
