-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Pretty Printers for the Cardano Ledger
@package cardano-ledger-pretty
@version 0.1.0.0

module Cardano.Ledger.Pretty
ppString :: String -> Doc a
ppDouble :: Double -> Doc a
ppInteger :: Integer -> Doc a
ppRational :: Rational -> Doc a
ppFloat :: Float -> Doc a
ppNatural :: Natural -> Doc a
ppWord64 :: Word64 -> Doc a
ppWord32 :: Word32 -> Doc a
ppWord8 :: Word8 -> Doc a
ppWord16 :: Word16 -> Doc a
ppFixedPoint :: FixedPoint -> Doc a
ppPair :: (t1 -> PDoc) -> (t2 -> PDoc) -> (t1, t2) -> PDoc
ppSignedDSIGN :: Show a => a -> PDoc
ppBool :: Bool -> Doc a
ppInt :: Int -> Doc a
isEmpty :: Doc ann -> Bool
putDoc :: Doc ann -> IO ()
newtype PrettyAnn
Width :: Int -> PrettyAnn
type Ann = [PrettyAnn]
type PDoc = Doc Ann
text :: Text -> Doc ann
long_bech32 :: ByteString -> Text
lazy_bech32 :: ByteString -> Text
ppLong :: ByteString -> PDoc
ppLazy :: ByteString -> PDoc

-- | x == y
equate :: Doc a -> Doc a -> Doc a

-- | x -&gt; y
arrow :: (Doc a, Doc a) -> Doc a

-- | ppSexp x [w,y,z] --&gt; (x w y z)
ppSexp :: Text -> [PDoc] -> PDoc
ppSexp' :: PDoc -> [PDoc] -> PDoc

-- | ppRecord name [("a",x),("b",y),("c",z)] --&gt; name { a = x, b = y, c
--   = z }
ppRecord :: Text -> [(Text, PDoc)] -> PDoc
ppRecord' :: PDoc -> [(Text, PDoc)] -> PDoc

-- | Vertical layout with commas aligned on the left hand side
puncLeft :: Doc ann -> [Doc ann] -> Doc ann -> Doc ann -> Doc ann
ppSet :: (x -> Doc ann) -> Set x -> Doc ann
ppList :: (x -> Doc ann) -> [x] -> Doc ann
ppStrictSeq :: (a -> Doc ann) -> StrictSeq a -> Doc ann
ppStrictMaybe :: (x -> Doc ann) -> StrictMaybe x -> Doc ann
ppMaybe :: (x -> Doc ann) -> Maybe x -> Doc ann
ppAssocList :: PDoc -> (k -> PDoc) -> (v -> PDoc) -> [(k, v)] -> PDoc
ppMap' :: PDoc -> (k -> PDoc) -> (v -> PDoc) -> Map k v -> PDoc
ppMap :: (k -> PDoc) -> (v -> PDoc) -> Map k v -> PDoc
ppVMap :: (Vector kv k, Vector vv v) => (k -> PDoc) -> (v -> PDoc) -> VMap kv vv k v -> PDoc
class PrettyA t
prettyA :: PrettyA t => t -> PDoc
ppTrip :: Triple crypto -> PDoc
ppUnifiedMap :: UnifiedMap crypto -> PDoc
ppLastAppliedBlock :: LastAppliedBlock c -> PDoc
ppHashHeader :: HashHeader c -> PDoc
ppWithOrigin :: (t -> PDoc) -> WithOrigin t -> PDoc
ppBHBody :: Crypto c => BHBody c -> PDoc
ppPrevHash :: PrevHash c -> PDoc
ppBHeader :: Crypto c => BHeader c -> PDoc
ppBlock :: (PrettyA (TxSeq era), PrettyA h) => Block h era -> PDoc
ppPoolDistr :: PoolDistr c -> PDoc
ppIndividualPoolStake :: IndividualPoolStake c -> PDoc
ppRewardUpdate :: RewardUpdate crypto -> PDoc
ppRewardSnapShot :: RewardSnapShot crypto -> PDoc
ppPoolRewardInfo :: PoolRewardInfo crypto -> PDoc
ppFreeVars :: FreeVars crypto -> PDoc
ppAns :: RewardAns crypto -> PDoc
ppRewardPulser :: Pulser crypto -> PDoc
ppPulsingRewUpdate :: PulsingRewUpdate crypto -> PDoc

-- | Constraints needed to ensure that the ledger state can be pretty
--   printed.
type CanPrettyPrintLedgerState era = (PrettyA (TxOut era), PrettyA (PParams era), PrettyA (State (EraRule "PPUP" era)))
ppAccountState :: AccountState -> PDoc
ppDPState :: DPState crypto -> PDoc
ppDState :: DState crypto -> PDoc
ppFutureGenDeleg :: FutureGenDeleg crypto -> PDoc
ppInstantaneousRewards :: InstantaneousRewards crypto -> PDoc
ppPPUPState :: PrettyA (PParamsDelta era) => PPUPState era -> PDoc
ppPState :: PState crypto -> PDoc
ppRewardAccounts :: Map (Credential 'Staking crypto) Coin -> PDoc
ppRewardType :: RewardType -> PDoc
ppReward :: Reward crypto -> PDoc
ppLeaderOnlyReward :: LeaderOnlyReward crypto -> PDoc
ppIncrementalStake :: IncrementalStake crypto -> PDoc
ppUTxOState :: CanPrettyPrintLedgerState era => UTxOState era -> PDoc
ppEpochState :: CanPrettyPrintLedgerState era => EpochState era -> PDoc
ppNewEpochState :: CanPrettyPrintLedgerState era => NewEpochState era -> PDoc
ppLedgerState :: CanPrettyPrintLedgerState era => LedgerState era -> PDoc
ppPerformanceEstimate :: PerformanceEstimate -> PDoc
ppNonMyopic :: NonMyopic crypto -> PDoc
ppStakeShare :: StakeShare -> PDoc
ppHistogram :: Histogram -> PDoc
ppLogWeight :: LogWeight -> PDoc
ppLikelihood :: Likelihood -> PDoc
ppStake :: Stake crypto -> PDoc
ppBlocksMade :: BlocksMade crypto -> PDoc
ppSnapShot :: SnapShot crypto -> PDoc
ppSnapShots :: SnapShots crypto -> PDoc
ppUTxO :: PrettyA (TxOut era) => UTxO era -> PDoc
ppMetadatum :: Metadatum -> PDoc
ppMetadata :: Metadata era -> PDoc
ppTx :: (PrettyA (TxBody era), PrettyA (AuxiliaryData era), PrettyA (Witnesses era)) => Tx era -> PDoc
ppBootstrapWitness :: Crypto crypto => BootstrapWitness crypto -> PDoc
ppWitnessSetHKD :: (Era era, PrettyA (Script era)) => WitnessSetHKD Identity era -> PDoc
ppSafeHash :: SafeHash crypto index -> PDoc
ppAuxiliaryDataHash :: AuxiliaryDataHash c -> PDoc
ppCompactForm :: Compactible a => (a -> PDoc) -> CompactForm a -> PDoc
ppDelegation :: Delegation c -> PDoc
ppPoolMetadata :: PoolMetadata -> PDoc
ppStakePoolRelay :: StakePoolRelay -> PDoc
ppPoolParams :: PoolParams c -> PDoc
ppWdrl :: Wdrl c -> PDoc
ppTxId :: TxId c -> PDoc
ppTxIn :: TxIn c -> PDoc
ppTxOut :: (Era era, PrettyA (Value era)) => TxOut era -> PDoc
ppDelegCert :: DelegCert c -> PDoc
ppPoolCert :: PoolCert c -> PDoc
ppGenesisDelegCert :: GenesisDelegCert c -> PDoc
ppMIRPot :: MIRPot -> PDoc
ppMIRTarget :: MIRTarget c -> PDoc
ppMIRCert :: MIRCert c -> PDoc
ppDCert :: DCert c -> PDoc
ppTxBody :: PrettyA (TxOut era) => PrettyA (PParamsDelta era) => TxBody era -> PDoc
ppWitVKey :: (Typeable kr, Crypto c) => WitVKey kr c -> PDoc
ppStakeCreds :: StakeCreds c -> PDoc
ppIPv4 :: IPv4 -> PDoc
ppIPv6 :: IPv6 -> PDoc
ppCompactAddr :: Crypto c => CompactAddr c -> PDoc
ppProtVer :: ProtVer -> PDoc
ppPParams :: PParams' Identity era -> PDoc
ppPParamsUpdate :: PParams' StrictMaybe era -> PDoc
ppUpdate :: PrettyA (PParamsDelta era) => Update era -> PDoc
ppProposedPPUpdates :: PrettyA (PParamsDelta era) => ProposedPPUpdates era -> PDoc
ppPPUpdateEnv :: PPUpdateEnv c -> PDoc
ppCoin :: Coin -> PDoc
ppDeltaCoin :: DeltaCoin -> PDoc
ppBootstrapAddress :: BootstrapAddress c -> PDoc
ppNetworkMagic :: NetworkMagic -> PDoc
ppUnparsedFields :: UnparsedFields -> PDoc
ppAddr :: Addr c -> PDoc
ppHDAddressPayload :: HDAddressPayload -> PDoc
ppRewardAcnt :: RewardAcnt c -> PDoc
ppCredential :: Credential keyrole c -> PDoc
ppPtr :: Ptr -> PDoc
ppStakeReference :: StakeReference c -> PDoc
ppGenesisCredential :: GenesisCredential c -> PDoc
ppMultiSig :: Crypto crypto => MultiSig crypto -> PDoc
ppScriptHash :: ScriptHash crypto -> PDoc
ppSlotNo :: SlotNo -> Doc ann
ppDuration :: Duration -> Doc ann
ppEpochNo :: EpochNo -> Doc ann
ppEpochSize :: EpochSize -> Doc ann
ppBlockNo :: BlockNo -> Doc ann
ppKESPeriod :: KESPeriod -> PDoc
ppOCertEnv :: OCertEnv crypto -> PDoc
ppOCert :: forall crypto. Crypto crypto => OCert crypto -> PDoc
ppOCertSignable :: forall crypto. Crypto crypto => OCertSignable crypto -> PDoc
ppHash :: Hash a b -> PDoc
ppUnitInterval :: UnitInterval -> PDoc
ppNonce :: Nonce -> PDoc
ppActiveSlotCoeff :: ActiveSlotCoeff -> PDoc
ppGlobals :: Globals -> PDoc
ppNetwork :: Network -> PDoc
ppSystemStart :: SystemStart -> PDoc
ppUrl :: Url -> PDoc
ppPort :: Port -> PDoc
ppDnsName :: DnsName -> PDoc
ppVKey :: Crypto c => VKey r c -> PDoc
ppKeyPair :: Crypto c => KeyPair r c -> PDoc
ppKeyHash :: KeyHash x c -> PDoc
ppGenDelegPair :: GenDelegPair c -> PDoc
ppGKeys :: Crypto c => GKeys c -> PDoc
ppVerKeyKES :: forall crypto. Crypto crypto => Proxy crypto -> VerKeyKES crypto -> PDoc
ppGenDelegs :: GenDelegs c -> PDoc

-- | Used to test pretty printing things with different widths for example:
--   testwidth 120 ls ppLedgerState prints LedgerState, ls, with a max
--   width of 120 columns one can use this to observe the how "pretty" a
--   printer is at different widths
atWidth :: Int -> a -> (a -> PDoc) -> IO ()

-- | Wrap a type: t (that has a PrettyA instance) with a newtype
--   cnstructor, so that the prettyA instance is used to Show (Nice t). Can
--   also be used as a DerivingVia helper.
newtype Nice t
Nice :: t -> Nice t
[unNice] :: Nice t -> t
ptrace :: PrettyA t => String -> t -> a -> a

-- | turn on trace appromimately 1 in <tt>n</tt> times it is called.
occaisionally :: Hashable a => a -> Int -> String -> String
instance Cardano.Ledger.Pretty.PrettyA t => GHC.Show.Show (Cardano.Ledger.Pretty.Nice t)
instance GHC.Classes.Eq t => GHC.Classes.Eq (Cardano.Ledger.Pretty.Nice t)
instance (Cardano.Ledger.Era.Era era, Cardano.Ledger.Pretty.CanPrettyPrintLedgerState era) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.LedgerState.EpochState era)
instance (Cardano.Ledger.Era.Era era, Cardano.Ledger.Pretty.CanPrettyPrintLedgerState era) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.LedgerState.NewEpochState era)
instance (Cardano.Ledger.Era.Era era, Cardano.Ledger.Pretty.CanPrettyPrintLedgerState era) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.LedgerState.LedgerState era)
instance (Cardano.Ledger.Era.Era era, Cardano.Ledger.Pretty.CanPrettyPrintLedgerState era) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.LedgerState.UTxOState era)
instance Cardano.Ledger.Pretty.PrettyA Data.ByteString.Internal.ByteString
instance Cardano.Ledger.Pretty.PrettyA Data.ByteString.Lazy.Internal.ByteString
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Protocol.TPraos.BHeader.LastAppliedBlock c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Protocol.TPraos.BHeader.HashHeader c)
instance Cardano.Ledger.Pretty.PrettyA t => Cardano.Ledger.Pretty.PrettyA (Cardano.Slotting.Slot.WithOrigin t)
instance Cardano.Ledger.Crypto.Crypto c => Cardano.Ledger.Pretty.PrettyA (Cardano.Protocol.TPraos.BHeader.BHBody c)
instance Cardano.Ledger.Crypto.Crypto c => Cardano.Ledger.Pretty.PrettyA (Cardano.Protocol.TPraos.BHeader.BHeader c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Protocol.TPraos.BHeader.PrevHash c)
instance (Cardano.Ledger.Era.Era era, Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Era.TxSeq era), Cardano.Ledger.Pretty.PrettyA h) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Block.Block h era)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.PoolDistr.PoolDistr c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.PoolDistr.IndividualPoolStake c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.RewardUpdate.RewardSnapShot crypto)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.RewardUpdate.FreeVars crypto)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.RewardUpdate.Pulser crypto)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.RewardUpdate.PulsingRewUpdate crypto)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.RewardUpdate.RewardUpdate crypto)
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Shelley.LedgerState.AccountState
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.LedgerState.DPState crypto)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.LedgerState.DState crypto)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.LedgerState.FutureGenDeleg crypto)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.LedgerState.InstantaneousRewards crypto)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.PParamsDelta era) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.LedgerState.PPUPState era)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.LedgerState.PState crypto)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.LedgerState.IncrementalStake c)
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Shelley.PoolRank.PerformanceEstimate
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Shelley.Rewards.StakeShare
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Shelley.PoolRank.Histogram
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Shelley.PoolRank.LogWeight
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Shelley.PoolRank.Likelihood
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.EpochBoundary.Stake crypto)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.BaseTypes.BlocksMade crypto)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.EpochBoundary.SnapShot crypto)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.EpochBoundary.SnapShots crypto)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.TxOut era) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.UTxO.UTxO era)
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Shelley.Metadata.Metadatum
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.Metadata.Metadata era)
instance (Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.TxBody era), Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.AuxiliaryData era), Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.Witnesses era), Cardano.Ledger.Era.Era era) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.Tx.Tx era)
instance Cardano.Ledger.Crypto.Crypto crypto => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.Address.Bootstrap.BootstrapWitness crypto)
instance (Cardano.Ledger.Era.Era era, Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.Script era)) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.Tx.WitnessSetHKD Data.Functor.Identity.Identity era)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.AuxiliaryData.AuxiliaryDataHash c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.SafeHash.SafeHash c i)
instance (Cardano.Ledger.Compactible.Compactible a, Cardano.Ledger.Pretty.PrettyA a) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Compactible.CompactForm a)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.TxBody.Delegation c)
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Shelley.TxBody.PoolMetadata
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Shelley.TxBody.StakePoolRelay
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.TxBody.PoolParams c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.TxBody.Wdrl c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.TxIn.TxId c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.TxIn.TxIn c)
instance (Cardano.Ledger.Era.Era era, Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.Value era)) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.TxBody.TxOut era)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.TxBody.DelegCert c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.TxBody.PoolCert c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.TxBody.GenesisDelegCert c)
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Shelley.TxBody.MIRPot
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.TxBody.MIRCert c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.TxBody.DCert c)
instance (Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.TxOut era), Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.PParamsDelta era)) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.TxBody.TxBody era)
instance (Data.Typeable.Internal.Typeable kr, Cardano.Ledger.Crypto.Crypto c) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.TxBody.WitVKey kr c)
instance Cardano.Ledger.Crypto.Crypto c => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.TxBody.StakeCreds c)
instance Cardano.Ledger.Pretty.PrettyA Data.IP.Addr.IPv4
instance Cardano.Ledger.Pretty.PrettyA Data.IP.Addr.IPv6
instance Cardano.Ledger.Crypto.Crypto c => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.CompactAddress.CompactAddr c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.PParams.PPUpdateEnv c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.PParamsDelta e) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.PParams.ProposedPPUpdates e)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.PParamsDelta e) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.PParams.Update e)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.PParams.PParams' Data.Maybe.Strict.StrictMaybe e)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.PParams.PParams' Data.Functor.Identity.Identity e)
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.BaseTypes.ProtVer
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Coin.Coin
instance Cardano.Ledger.Pretty.PrettyA Cardano.Chain.Common.NetworkMagic.NetworkMagic
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Address.BootstrapAddress c)
instance Cardano.Ledger.Pretty.PrettyA Cardano.Chain.Common.Attributes.UnparsedFields
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Address.Addr c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Address.RewardAcnt c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Credential.Credential r c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Credential.StakeReference c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Credential.GenesisCredential c)
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Credential.Ptr
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Hashes.ScriptHash c)
instance Cardano.Ledger.Crypto.Crypto c => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Shelley.Scripts.MultiSig c)
instance Cardano.Ledger.Pretty.PrettyA Cardano.Slotting.Slot.SlotNo
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Slot.Duration
instance Cardano.Ledger.Pretty.PrettyA Cardano.Slotting.Slot.EpochNo
instance Cardano.Ledger.Pretty.PrettyA Cardano.Slotting.Slot.EpochSize
instance Cardano.Ledger.Pretty.PrettyA Cardano.Slotting.Block.BlockNo
instance Cardano.Ledger.Pretty.PrettyA Cardano.Protocol.TPraos.OCert.KESPeriod
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Protocol.TPraos.OCert.OCertEnv c)
instance Cardano.Ledger.Crypto.Crypto c => Cardano.Ledger.Pretty.PrettyA (Cardano.Protocol.TPraos.OCert.OCert c)
instance Cardano.Ledger.Crypto.Crypto c => Cardano.Ledger.Pretty.PrettyA (Cardano.Protocol.TPraos.OCert.OCertSignable c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Crypto.Hash.Class.Hash a b)
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.BaseTypes.Url
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.BaseTypes.Network
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.BaseTypes.Globals
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.BaseTypes.ActiveSlotCoeff
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.BaseTypes.Nonce
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.BaseTypes.UnitInterval
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.BaseTypes.Port
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.BaseTypes.DnsName
instance Cardano.Ledger.Crypto.Crypto c => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Keys.VKey r c)
instance Cardano.Ledger.Crypto.Crypto c => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Keys.KeyPair r c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Keys.KeyHash x c)
instance Cardano.Ledger.Crypto.Crypto c => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Keys.GKeys c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Keys.GenDelegPair c)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Keys.GenDelegs c)
instance Cardano.Ledger.Pretty.PrettyA GHC.Base.String
instance Cardano.Ledger.Pretty.PrettyA GHC.Types.Double
instance Cardano.Ledger.Pretty.PrettyA GHC.Integer.Type.Integer
instance Cardano.Ledger.Pretty.PrettyA GHC.Types.Float
instance Cardano.Ledger.Pretty.PrettyA GHC.Natural.Natural
instance Cardano.Ledger.Pretty.PrettyA GHC.Word.Word64
instance Cardano.Ledger.Pretty.PrettyA GHC.Word.Word32
instance Cardano.Ledger.Pretty.PrettyA GHC.Word.Word16
instance Cardano.Ledger.Pretty.PrettyA GHC.Word.Word8
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.BaseTypes.FixedPoint
instance Cardano.Ledger.Pretty.PrettyA GHC.Types.Bool
instance Cardano.Ledger.Pretty.PrettyA GHC.Types.Int
instance (Cardano.Ledger.Pretty.PrettyA x, Cardano.Ledger.Pretty.PrettyA y) => Cardano.Ledger.Pretty.PrettyA (Data.Map.Internal.Map x y)

module Cardano.Ledger.Pretty.Mary
ppValue :: Value crypto -> PDoc
ppPolicyID :: PolicyID crypto -> PDoc
ppAssetName :: AssetName -> PDoc
ppTimelock :: Crypto crypto => Timelock crypto -> PDoc
ppValidityInterval :: ValidityInterval -> PDoc
ppAuxiliaryData :: PrettyA (Script era) => AuxiliaryData era -> PDoc
ppTxBody :: (Era era, PrettyA (Value era), PrettyA (PParamsDelta era)) => TxBody era -> PDoc
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Mary.Value.Value crypto)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Mary.Value.PolicyID crypto)
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Mary.Value.AssetName
instance Cardano.Ledger.Crypto.Crypto crypto => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.ShelleyMA.Timelocks.Timelock crypto)
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.ShelleyMA.Timelocks.ValidityInterval
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.Script era) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.ShelleyMA.AuxiliaryData.AuxiliaryData era)
instance (Cardano.Ledger.Era.Era era, Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.Value era), Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.PParamsDelta era)) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.ShelleyMA.TxBody.TxBody era)

module Cardano.Ledger.Pretty.Alonzo
ppTxSeq :: (PrettyA (Script era), Era era, PrettyA (AuxiliaryData era), PrettyA (TxBody era)) => TxSeq era -> PDoc
ppLanguage :: Language -> PDoc
ppTag :: Tag -> PDoc
ppScript :: forall era. (ValidateScript era, Script era ~ Script era) => Script era -> PDoc
ppExUnits :: ExUnits -> PDoc
ppCostModel :: CostModel -> PDoc
ppCostModels :: CostModels -> PDoc
ppPrices :: Prices -> PDoc
ppPParamsUpdate :: PParams' StrictMaybe era -> PDoc
ppPlutusData :: Data -> PDoc
ppData :: Data era -> PDoc
ppAuxiliaryData :: PrettyA (Script era) => AuxiliaryData era -> PDoc
ppPParams :: PParams era -> PDoc
ppTxOut :: (Era era, PrettyA (Value era)) => TxOut era -> PDoc
ppTxBody :: (AlonzoBody era, PrettyA (Value era), PrettyA (PParamsDelta era)) => TxBody era -> PDoc
ppAuxDataHash :: AuxiliaryDataHash crypto -> PDoc
ppRdmrPtr :: RdmrPtr -> PDoc
ppTxWitness :: (Era era, PrettyA (Script era)) => TxWitness era -> PDoc
ppIsValid :: IsValid -> PDoc
ppTx :: (Era era, PrettyA (Script era), PrettyA (TxBody era), PrettyA (AuxiliaryData era)) => ValidatedTx era -> PDoc
instance (Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.Script era), Cardano.Ledger.Era.Era era, Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.AuxiliaryData era), Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.TxBody era)) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Alonzo.TxSeq.TxSeq era)
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Alonzo.Language.Language
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Alonzo.Scripts.Tag
instance (Cardano.Ledger.Era.ValidateScript era, Cardano.Ledger.Core.Script era GHC.Types.~ Cardano.Ledger.Alonzo.Scripts.Script era) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Alonzo.Scripts.Script era)
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Alonzo.Scripts.ExUnits
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Alonzo.Scripts.CostModel
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Alonzo.Scripts.Prices
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Alonzo.PParams.PParams era)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Alonzo.PParams.PParams' Data.Maybe.Strict.StrictMaybe era)
instance Cardano.Ledger.Pretty.PrettyA PlutusCore.Data.Data
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Alonzo.Data.Data era)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.Script era) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Alonzo.Data.AuxiliaryData era)
instance (Cardano.Ledger.Alonzo.TxBody.AlonzoBody era, Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.Value era), Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.PParamsDelta era)) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Alonzo.TxBody.TxBody era)
instance (Cardano.Ledger.Era.Era era, Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.Value era)) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Alonzo.TxBody.TxOut era)
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Alonzo.TxWitness.RdmrPtr
instance (Cardano.Ledger.Era.Era era, Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.Script era)) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Alonzo.TxWitness.TxWitness era)
instance Cardano.Ledger.Pretty.PrettyA Cardano.Ledger.Alonzo.Tx.IsValid
instance (Cardano.Ledger.Era.Era era, Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.Script era), Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.TxBody era), Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.AuxiliaryData era)) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Alonzo.Tx.ValidatedTx era)

module Cardano.Ledger.Pretty.Babbage
ppPParamsId :: PParams' Identity era -> PDoc
ppPParams :: PParams era -> PDoc
ppPParamsStrictMaybe :: PParams' StrictMaybe era -> PDoc
ppPParamsUpdate :: PParamsUpdate era -> PDoc
ppBabbageUtxoPred :: (PrettyA (UtxoPredicateFailure era), PrettyA (TxOut era)) => BabbageUtxoPred era -> PDoc
ppBabbageUtxowPred :: (PrettyA (UtxowPredicateFail era), PrettyA (PredicateFailure (EraRule "UTXO" era))) => BabbageUtxowPred era -> PDoc
ppTxOut :: forall era. (Era era, ValidateScript era, PrettyA (Script era), PrettyA (Value era)) => TxOut era -> PDoc
ppDatum :: Datum era -> PDoc
ppBinaryData :: BinaryData era -> PDoc
ppDataHash :: DataHash era -> PDoc
ppTxBody :: (ValidateScript era, PrettyA (Value era), PrettyA (PParamsDelta era), PrettyA (Script era)) => TxBody era -> PDoc
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Babbage.PParams.PParams era)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Babbage.PParams.PParamsUpdate era)
instance (Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Alonzo.Rules.Utxo.UtxoPredicateFailure era), Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.TxOut era)) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Babbage.Rules.Utxo.BabbageUtxoPred era)
instance (Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Alonzo.Rules.Utxow.UtxowPredicateFail era), Cardano.Ledger.Pretty.PrettyA (Control.State.Transition.Extended.PredicateFailure (Cardano.Ledger.Core.EraRule "UTXO" era))) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Babbage.Rules.Utxow.BabbageUtxowPred era)
instance (Cardano.Ledger.Era.Era era, Cardano.Ledger.Era.ValidateScript era, Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.Script era), Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.Value era)) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Babbage.TxBody.TxOut era)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Alonzo.Data.Datum era)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Alonzo.Data.BinaryData era)
instance Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Hashes.DataHash era)
instance (Cardano.Ledger.Era.Era era, Cardano.Ledger.Era.ValidateScript era, Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.Value era), Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.PParamsDelta era), Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Core.Script era)) => Cardano.Ledger.Pretty.PrettyA (Cardano.Ledger.Babbage.TxBody.TxBody era)
